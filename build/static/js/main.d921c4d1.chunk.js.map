{"version":3,"sources":["components/loginpage/Loginpage.js","components/message.js","components/insertnew/newGroupdropdown.js","components/insertnew/newRoledropdown.js","components/reusable/newdate.js","components/insertnew/newStatusDropDown.js","components/insertnew/newName.js","components/insertnew/newExcuse.js","components/insertnew/formcontent.js","components/insertnew/form.js","services/phoneservice.js","components/personnellist/updateExcuse.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/roleDropDown.js","components/personnellist/groupDropDown.js","components/personnellist/statusDropDown.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/personnelList.js","components/settings/newcdo.js","components/settings/newcds.js","components/settings/newcos.js","components/settings/newas.js","components/settings/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/CCP.js","components/contents/CSP.js","components/contents/Excuses.js","components/contents/signature.js","components/contents/Tradecourse.js","components/contents/paradestate.js","Appcontent.js","App.js","index.js"],"names":["Loginpage","access","setnewaccess","useState","showPassword","setshowPassword","pass","setnewpass","align","p","x","xs","md","y","textAlign","textWeight","textSize","fontFamily","pos","bgImg","bgSize","bgPos","h","onChange","event","target","value","placeholder","type","suffix","onClick","bg","w","top","right","rounded","r","name","color","size","Message","message","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","NewGroupdropdown","setnewGroup","newGroup","menuList","setshowModal","showModal","console","log","getAttribute","d","isOpen","menu","focusBg","borderColor","focusBorderColor","textColor","openSuffix","closeSuffix","toUpperCase","NewRoleDropDown","setnewRole","newRole","Today","Date","dd","getDate","mm","getMonth","yy","getFullYear","toString","substr","Newdate","NewStatusDropDown","setnewStatus","newStatus","setnewReason","detailresponse","prompt","justify","lg","NewName","newName","setNewName","prefix","cursor","left","transform","window","open","NewExcuse","newexcuse","setnewExcuse","Formcontent","addName","onSubmit","hoverBg","l","shadow","hoverShadow","Form","show","setShow","HandleShow","m","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","UpdateExcuse","options","person","persons","setPersons","excuse","status","reason","group","role","nameCheck","filter","toLowerCase","includes","phoneservice","updatedList","map","ModalSize","onClose","maxW","t","b","DetailModal","Handleclick","AlignCenterModal","DeleteModal","RoleDropDown","Groupdropdown","StatusDropDown","returnValue","newReason","Updatebuttons","Emoji","symbol","className","Emojidisplay","currentStatus","Reason","Personnellist","NewCDO","setnewcdo","HQList","String","NewCDS","setnewcds","CDSList","NewCOS","setnewcos","COSList","NewAS","setnewas","ASList","Settings","newauthor","setnewauthor","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","margin","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","length","SevenSpecrolelist","Sevenspeccurrent","SevenSpectotal","IC2rolelist","IC2current","IC2total","ISrolelist","IScurrent","IStotal","Sixmonolist","Sixmonocurrent","Sixmonototal","Summary","newcdo","newcds","newcos","newas","currentstrength","totalstrength","HQ","JSON","stringify","index","CCP","CCPList","CSP","CSPList","Excuse","Excuses","ExcuseList","Signature","Tradecourse","TcourseList","ParadeState","Appcontent","newMessage","setNewMessage","useEffect","allPersons","preventDefault","trim","confirm","setTimeout","catch","error","concat","alert","App","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","grid","containerWidth","sm","xl","gutterWidth","document","getElementById"],"mappings":"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","file":"static/js/main.d921c4d1.chunk.js","sourcesContent":["// Show Hide Password\r\nimport React, {useState} from \"react\";\r\nimport { Text, Div, Input, Button, Icon} from \"atomize\";\r\n\r\n\r\n\r\nconst Loginpage = ({access,setnewaccess}) => {\r\n    const [showPassword, setshowPassword] = useState(false)\r\n    const [pass, setnewpass] = useState('')\r\n\r\n    const Handleshowpassword = () => {\r\n        setshowPassword(!showPassword)\r\n    }\r\n\r\n    const Handlelogin = (event) => {\r\n        setnewpass(event.target.value)\r\n    }\r\n\r\n    if (pass==='sigparadestate7') {\r\n        setnewaccess(!access)\r\n    } \r\n    return (\r\n        <Div align=\"center\" p={{ x: { xs: '1rem', md: '4rem' }, y: { xs: '2rem', md: '0rem' }}}\r\n        \r\n>\r\n            <Text p={{ xs: '1rem', md: '4rem' }}\r\n            textAlign='center'\r\n            textWeight=\"600\"\r\n            textSize=\"display1\"\r\n            fontFamily=\"Helvetica\"\r\n            pos=\"relative\"\r\n            >\r\n              Login\r\n            </Text>\r\n            <Div\r\n          bgImg=\"https://i.ibb.co/cthGK82/Parade-State-logos-black.png://images.unsplash.com/photo-1559963629-38ed0fbd4c86?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\"\r\n          bgSize=\"cover\"\r\n          bgPos=\"center\"\r\n          h=\"10rem\"\r\n        />\r\n\r\n                <Input\r\n                onChange = {Handlelogin}\r\n          placeholder=\"Password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          suffix={\r\n            <Button\r\n              pos=\"absolute\"\r\n              onClick={Handleshowpassword}\r\n              bg=\"transparent\"\r\n              w=\"3rem\"\r\n              top=\"0\"\r\n              right=\"0\"\r\n              rounded={{ r: \"md\" }}\r\n            >\r\n              <Icon\r\n                name={showPassword ? \"EyeSolid\" : \"Eye\"}\r\n                color={showPassword ? \"danger800\" : \"success800\"}\r\n                size=\"16px\"\r\n              />\r\n            </Button>\r\n          }\r\n        />\r\n\r\n<Text p={{ xs: '1rem', md: '4rem' }}\r\n            textAlign='center'\r\n            textWeight=\"600\"\r\n            textSize=\"tiny\"\r\n            fontFamily=\"Helvetica\"\r\n            pos=\"relative\"\r\n\r\n\r\n\r\n            >\r\n                If you are not authorised to use this system, please do not attempt to login.</Text>\r\n        </Div>\r\n\r\n      );\r\n}\r\n\r\nexport default Loginpage","import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message\r\n\r\n//not relevant","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewGroupdropdown = ({setnewGroup,newGroup}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Group: ${event.target.getAttribute(\"value\")}`)\r\n      setnewGroup(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value={newGroup} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ccp' >\r\n            {\"FG1 - CCP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='csp'>\r\n            {\"FG2 - CSP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='tradecourse'>\r\n            {\"TRADE COURSE\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Dropdown\r\n        rounded=\"xl\"\r\n        isOpen={showModal}\r\n        menu={menuList}\r\n        onClick={Handleclick}\r\n        bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n      >\r\n        {(newGroup)? `Group: ${newGroup.toUpperCase()}`: \"Group\"}\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\nexport default NewGroupdropdown;","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewRoleDropDown = ({setnewRole, newRole}) => {\r\n\r\n    const HandleUpdateRole = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Role: ${event.target.getAttribute(\"value\")}`)\r\n      setnewRole(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newRole} onClick ={HandleUpdateRole}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='sevenspec' >\r\n            {\"7th Mono Spec\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ic2'>\r\n            {\"IC2 Opr\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='is'>\r\n            {\"IS Opr\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newRole)? `Role: ${newRole.toUpperCase()}`: \"Role\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewRoleDropDown;","let Today = new Date();\r\nlet dd = Today.getDate();\r\nlet mm = Today.getMonth()+1; \r\nconst yy = Today.getFullYear().toString().substr(-2);\r\n\r\nif(dd<10) dd=`0${dd}`\r\nif(mm<10) mm=`0${mm}`\r\n\r\nconst Newdate = `${dd}${mm}${yy}`\r\n\r\nexport default Newdate","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst NewStatusDropDown = ({setnewStatus,newStatus,setnewReason}) => {\r\n  \r\n  let detailresponse = ''\r\n\r\n    const handleStatusChange = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Status: ${event.target.getAttribute(\"value\")}`)\r\n      setnewStatus(event.target.getAttribute(\"value\"))\r\n  \r\n      if (event.target.getAttribute(\"value\") === 'mc') {\r\n        detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'ma') {\r\n        detailresponse = prompt('Details',`MA AT`)\r\n      } else if (event.target.getAttribute(\"value\") === 'off') {\r\n        detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'leave') {\r\n        detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'attached') {\r\n        detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n      } else if (event.target.getAttribute(\"value\") === 'others') {\r\n        detailresponse = prompt('Details',``)\r\n      } else if (event.target.getAttribute(\"value\") === 'oncourse') {\r\n        detailresponse = prompt('Details',``)\r\n      }\r\n      else {\r\n        detailresponse = ''\r\n      }\r\n      console.log(`Reason: ${detailresponse}`)\r\n      if (detailresponse) {\r\n        setnewReason(detailresponse.toUpperCase())\r\n      } else {\r\n        setnewReason('nil')\r\n\r\n      }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newStatus} onClick ={handleStatusChange}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n      <Dropdown\r\n          rounded=\"xl\"\r\n          isOpen={showModal}\r\n          menu={menuList}\r\n          onClick={Handleclick}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newStatus)? `Status: ${newStatus.toUpperCase()}`: \"Status\"}\r\n        </Dropdown>\r\n      </Div>\r\n        \r\n      );\r\n}\r\n\r\nexport default NewStatusDropDown\r\n;","import React from \"react\";\r\nimport {Div, Input, Icon } from \"atomize\";\r\n\r\nconst NewName = ({newName,setNewName}) => {\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(`Name: ${event.target.value}`)\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n  return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n<Input\r\n    rounded=\"xl\"\r\n    value={newName}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNameChange}\r\n    placeholder=\"Rank/Name\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewName","import React from \"react\";\r\nimport { Input, Icon, Div } from \"atomize\";\r\n\r\nconst NewExcuse = ({newexcuse,setnewExcuse}) => {\r\n\r\n    const handleExcuseChange = (event) => {\r\n        console.log(`Excuse: ${event.target.value}`)\r\n        setnewExcuse(event.target.value)\r\n      }\r\n\r\n  return (\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n    <Input\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"RemoveSolid\"\r\n    color=\"danger800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewExcuse","import React from 'react'\r\nimport NewGroupdropdown from './newGroupdropdown';\r\nimport NewRoleDropDown from './newRoledropdown'\r\nimport NewStatusDropDown from './newStatusDropDown'\r\nimport NewName from './newName'\r\nimport NewExcuse from './newExcuse';\r\nimport {Div,Button} from \"atomize\";\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n    return (\r\n      <Div>\r\n        <form onSubmit={addName}>\r\n          <NewName newName={newName} setNewName={setNewName}/>\r\n          <br/>\r\n          <NewExcuse newexcuse={newexcuse} setnewExcuse={setnewExcuse}/>\r\n          <br/>\r\n          <NewStatusDropDown setnewStatus={setnewStatus} newStatus={newStatus} setnewReason={setnewReason}/>\r\n          <br/>\r\n          <NewGroupdropdown setnewGroup={setnewGroup} newGroup={newGroup}/>\r\n          <br/>\r\n          <NewRoleDropDown setnewRole={setnewRole} newRole={newRole}/>\r\n          <br/>\r\n          <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Button\r\n            textColor=\"white\"\r\n            type='submit'\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black800\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\" \r\n              >\r\n                Submit\r\n            </Button>\r\n      </Div>\r\n        </form>\r\n      </Div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst Form = ({addName,\r\n    newName,\r\n    setNewName,\r\n    newStatus,\r\n    setnewStatus,\r\n    newGroup,\r\n    setnewGroup,\r\n    newexcuse,\r\n    setnewExcuse,\r\n    newRole,\r\n    setnewRole,\r\n    setnewReason,\r\n    }) => {\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Add\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response=>response.data)\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport { Div, Button } from \"atomize\"\r\n\r\nconst UpdateExcuse = ({options,person,persons,setPersons}) => {\r\n    \r\n  const Handleupdateexcuse = (event,value) => {  \r\n\r\n    console.log(value)\r\n    let response = prompt('Current excuses', person.excuse)\r\n    if (response) {\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: response.toUpperCase(),\r\n        role: person.role\r\n    }\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (response) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))  \r\n    }\r\n\r\n    }\r\n    }\r\n\r\n    if (options) {\r\n      return (\r\n          <Div d=\"flex\">\r\n          <Button \r\n          bg=\"white\"\r\n          focusBg=\"info300\"\r\n          borderColor=\"info600\"\r\n          focusBorderColor=\"info800\"\r\n          textColor=\"info800\"\r\n          textWeight=\"500\"\r\n          m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n\r\n          aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleupdateexcuse}>\r\n        Excuses\r\n      </Button>\r\n        </Div> \r\n      )\r\n}\r\n    }\r\n\r\n    export default UpdateExcuse","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n      >\r\n        <p>NAME: {person.name}</p>\r\n        <p>STATUS: {person.status.toUpperCase()}</p>\r\n        <p>REASON: {person.reason.toUpperCase()}</p>\r\n        <p>GROUP: {person.group.toUpperCase()}</p>\r\n        <p>EXCUSES: {person.excuse.toUpperCase()}</p>\r\n        <p>ROLE: {person.role.toUpperCase()}</p>\r\n\r\n\r\n\r\n\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n          \r\n            bg=\"success700\"\r\n            hoverBg=\"success600\"\r\n            m={{ r: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n          <Icon name=\"Menu\" size=\"20px\" />\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"warning700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n        \r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"danger700\"\r\n            hoverBg=\"danger600\"\r\n            m={{ b: \"1rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            <Icon name=\"Delete\" size=\"20px\" />\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='sevenspec' >\r\n            {\"7th Mono Spec\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ic2'>\r\n            {\"IC2 Opr\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='is'>\r\n            {\"IS Opr\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown  \r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Role\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default RoleDropDown;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst Groupdropdown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: person.status,\r\n              reason: person.reason,\r\n              group: event.target.getAttribute(\"value\"),\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ccp' >\r\n            {\"FG1 - CCP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='csp'>\r\n            {\"FG2 - CSP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='tradecourse'>\r\n            {\"TRADE COURSE\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Group\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default Groupdropdown;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst StatusDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n\r\n      let returnValue = event.target.getAttribute(\"value\")\r\n\r\n      let newReason = ''\r\n      if (returnValue === 'mc') {\r\n        newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (returnValue === 'ma') {\r\n        newReason = prompt('Details',`MA AT`)\r\n      } else if (returnValue === 'off') {\r\n        newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (returnValue === 'leave') {\r\n        newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (returnValue === 'attached') {\r\n        newReason = prompt('Details',`ATTACHED OUT TO `)\r\n      } else if (returnValue === 'others') {\r\n        newReason = prompt('Details',``)\r\n      } else if (returnValue === 'oncourse') {\r\n        newReason = prompt('Details',``)\r\n      }\r\n       else {\r\n        newReason = ''\r\n      }\r\n  \r\n      if (newReason) {\r\n        newReason = newReason.toUpperCase()\r\n      } else {\r\n        newReason = 'nil'\r\n      }\r\n  \r\n      console.log(newReason)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: event.target.getAttribute(\"value\"),\r\n              reason: newReason,\r\n              group: person.group,\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Status\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default StatusDropDown\r\n;","import React, {useState} from 'react'\r\nimport UpdateExcuse from './updateExcuse'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleDropDown from './roleDropDown'\r\nimport Groupdropdown from './groupDropDown'\r\nimport StatusDropDown from './statusDropDown'\r\nimport { Div, Button, Icon } from 'atomize'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\" }} onClick={HandleShow}><Icon name=\"Edit\" size=\"20px\" /></Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\" }} onClick={HandleShow}><Icon name=\"Edit\" size=\"20px\" /></Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <StatusDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <Groupdropdown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n          <UpdateExcuse options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Edit\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n          <br/>\r\n          <ol>\r\n            {persons.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </>\r\n      )\r\n  }\r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDO = ({persons,setnewcdo}) => {\r\n    \r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n\r\n    const handlecdochange = (event) => {\r\n        console.log(`CDO: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcdo(event.target.getAttribute(\"value\"))\r\n      }\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    const HQList = persons.filter(person=> (String(person.role)).toLowerCase()==='hq') \r\n    console.log(HQList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdochange}>\r\n        {HQList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDO\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDO\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDS = ({persons,setnewcds}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const handlecdschange = (event) => {\r\n        console.log(`CDS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcds(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const CDSList = persons.filter(person=> (String(person.role)).toLowerCase()==='sevenspec') \r\n    console.log(CDSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdschange}>\r\n        {CDSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          COS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDS\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCOS = ({persons,setnewcos}) => {\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n  const Handleclick = () => {\r\n      setshowModal(!showModal)\r\n  }\r\n  \r\n\r\n    const handlecoschange = (event) => {\r\n        console.log(`COS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcos(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const COSList = persons.filter(person=> (String(person.role)).toLowerCase()==='sevenspec') \r\n    console.log(COSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecoschange}>\r\n        {COSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n   \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCOS\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewAS = ({persons,setnewas}) => {\r\n\r\n    const handleaschange = (event) => {\r\n        console.log(`AS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewas(event.target.getAttribute(\"value\"))\r\n      }\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    const ASList = persons.filter(person=> (String(person.role)).toLowerCase()==='sevenspec') \r\n    console.log(ASList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handleaschange}>\r\n        {ASList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    \r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Armskote\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewAS\r\n;","import React from \"react\";\r\nimport {Icon, Div, Input } from \"atomize\";\r\nimport NewCDO from \"./newcdo\";\r\nimport NewCDS from \"./newcds\";\r\nimport NewCOS from \"./newcos\";\r\nimport NewAS from \"./newas\";\r\n\r\nconst Settings = ({\r\n    setnewcdo,\r\n    setnewcds,\r\n    setnewcos,\r\n    setnewas,\r\n    newauthor,\r\n    setnewauthor,\r\n    persons\r\n}) => {\r\n\r\n  const handleauthorchange = (event) => {\r\n    console.log(`Done by: ${event.target.value}`)\r\n    setnewauthor(event.target.value)\r\n  }\r\n\r\n    return (\r\n        <Div>\r\n          <h1>Settings</h1>\r\n          <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Input\r\n    rounded=\"xl\"\r\n    value={newauthor}\r\n    onChange={handleauthorchange}\r\n    placeholder=\"Done By: (Rank/Name)\"\r\n    p={{ l: '2rem', r: '3rem' }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n      />\r\n      </Div>\r\n          <NewCDO persons={persons} setnewcdo={setnewcdo}/>\r\n          <NewCDS persons={persons} setnewcds={setnewcds}/>\r\n          <NewCOS persons={persons} setnewcos={setnewcos}/>\r\n          <NewAS persons={persons} setnewas={setnewas}/>\r\n\r\n\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} Commanders, this is the strength for Signal Company as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const SevenSpecrolelist = persons.filter(person=> (person.role==='sevenspec'))\r\n  let Sevenspeccurrent = 0\r\n  SevenSpecrolelist.map(person=> (person.status==='present') ? (Sevenspeccurrent = Sevenspeccurrent+1) : Sevenspeccurrent)\r\n  const SevenSpectotal = SevenSpecrolelist.length\r\n\r\n  const IC2rolelist = persons.filter(person=> (person.role==='ic2'))\r\n  let IC2current = 0\r\n  IC2rolelist.map(person=> (person.status==='present') ? (IC2current = IC2current+1) : IC2current)\r\n  const IC2total = IC2rolelist.length\r\n\r\n  const ISrolelist = persons.filter(person=> (person.role==='is'))\r\n  let IScurrent = 0\r\n  ISrolelist.map(person=> (person.status==='present') ? (IScurrent = IScurrent+1) : IScurrent)\r\n  const IStotal = ISrolelist.length\r\n\r\n  const Sixmonolist = persons.filter(person=> (person.role==='sixmono'))\r\n  let Sixmonocurrent = 0\r\n  Sixmonolist.map(person=> (person.status==='present') ? (Sixmonocurrent = Sixmonocurrent+1) : Sixmonocurrent)\r\n  const Sixmonototal = Sixmonolist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -Coy HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -7th Mono Spec: {Sevenspeccurrent}/{SevenSpectotal} </p>\r\n          <p style={style}> -IC2 Opr: {IC2current}/{IC2total} </p>\r\n          <p style={style}> -IS Opr: {IScurrent}/{IStotal} </p>\r\n          <p style={style}> -6th Mono Opr: {Sixmonocurrent}/{Sixmonototal} </p>\r\n\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\nimport {Text} from \"atomize\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                newas}) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <Text style={style}>CDO: {newcdo.toUpperCase()}</Text>\r\n        <Text style={style}>CDS: {newcds.toUpperCase()}</Text>\r\n        <Text style={style}>COS: {newcos.toUpperCase()}</Text>\r\n        <Text style={style}>ARMSKOTE: {newas.toUpperCase()}</Text>\r\n        <br/>\r\n        <Text style={style}>Total Strength: {totalstrength}</Text>\r\n        <Text style={style}>Present Strength: {currentstrength}</Text> \r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        <Text style={style}>PRESENT IN CAMP: {currentstrength}</Text>\r\n        <br/>\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CCP = ({persons}) => {\r\n    \r\n    const CCPList = persons.filter(person=> (String(person.group)).toLowerCase()==='ccp') \r\n    console.log(`List of CCP personnel: ${JSON.stringify(CCPList)}`)\r\n    let currentstrength = 0\r\n    CCPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CCPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG1 - CCP: {currentstrength}/{totalstrength}</p>\r\n            {CCPList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CCP ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CSP = ({persons}) => {\r\n    \r\n    const CSPList = persons.filter(person=> (String(person.group)).toLowerCase()==='csp') \r\n    console.log(`List of CSP personnel: ${JSON.stringify(CSPList)}`)\r\n    let currentstrength = 0\r\n    CSPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CSPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG2 - CSP: {currentstrength}/{totalstrength}</p>\r\n            {CSPList.map((person, index)=> \r\n              <Text style={style} key={person.name}>                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CSP","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>STATUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Tradecourse = ({persons}) => {\r\n    \r\n    const TcourseList = persons.filter(person=> (String(person.group)).toLowerCase()==='tradecourse') \r\n    console.log(`List of Trade Course personnel: ${JSON.stringify(TcourseList)}`)\r\n    let currentstrength = 0\r\n    TcourseList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = TcourseList.length\r\n    if (totalstrength!='0') {\r\n      return (\r\n        <div>\r\n          <p style={style}>IC2 OPR COURSE TILL 160921: {currentstrength}/{totalstrength}</p>\r\n            {TcourseList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Tradecourse ","import React from 'react'\r\nimport HQ from './hq' \r\nimport CCP from './CCP';\r\nimport CSP from './CSP'\r\nimport Excuses from './Excuses'\r\nimport Signature from \"./signature\"\r\nimport Tradecourse from './Tradecourse';\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <CCP persons={persons}/>\r\n    <br/>\r\n    <CSP persons={persons}/>\r\n    <br/>\r\n    <Tradecourse persons={persons} />\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/>\r\n    \r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Message from './components/message'\r\nimport Form from './components/insertnew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/contents/paradestate'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newStatus, setnewStatus ] = useState('')\r\n  const [ newReason, setnewReason ] = useState('')\r\n\r\n  const [ newGroup, setnewGroup ] = useState('')\r\n  const [ newexcuse, setnewExcuse ] = useState('')\r\n  const [ newRole, setnewRole ] = useState('')\r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newas, setnewas] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n\r\n\r\n  //Adds new element to persons array\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      name: newName.trim().toUpperCase(),\r\n      status: newStatus.toLowerCase(),\r\n      reason: (newReason) ? newReason : 'nil',\r\n      group: newGroup.toUpperCase(),\r\n      excuse: (newexcuse) ? newexcuse.trim : 'nil',\r\n      role: newRole\r\n    }\r\n\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n      )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n      alert(\"All fields (other than medical excuses) must be filled.\")\r\n    } else if (nameCheck.length>0) {\r\n      if (window.confirm(`${newName.toUpperCase()} is already added to phonebook. Would you like to update the status?`)) {\r\n        return (\r\n          phoneservice\r\n            .update(nameCheck[0].id, newPerson)\r\n            .then(updatedList=> {setPersons(persons.map(person=>\r\n                person.id !== nameCheck[0].id\r\n                  ? person\r\n                  : updatedList))\r\n          setNewMessage(`${newName.toUpperCase()} has been updated`)\r\n          setTimeout(()=>setNewMessage(null),5000)\r\n        })\r\n            .catch(error=> {\r\n              setNewMessage(`${newName.toUpperCase()} has been already been removed from the server`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n        )}\r\n      } else {\r\n        phoneservice\r\n          .addNew(newPerson)\r\n          .then(updatedList => {\r\n              setPersons(persons.concat(updatedList))\r\n              setNewMessage(`${newName.toUpperCase()} has been added`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n          .catch(error=> {\r\n            setNewMessage(`${newName.toUpperCase()} has already been added to the server`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n        }\r\n        setnewStatus('')\r\n        setNewName('')\r\n        setnewReason('')\r\n        setnewGroup('')\r\n        setnewExcuse('')\r\n        setnewRole('')\r\n\r\n      }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Parade State Application (For Internal Use Only)</h2>\r\n      <Message message={newMessage}/>\r\n      <Form addName={addName}\r\n            newName={newName}\r\n            setNewName={setNewName}\r\n            newStatus={newStatus}\r\n            setnewStatus={setnewStatus}\r\n            newGroup = {newGroup} \r\n            setnewGroup = {setnewGroup}\r\n            newexcuse ={newexcuse}\r\n            setnewExcuse = {setnewExcuse}\r\n            newRole ={newRole}\r\n            setnewRole = {setnewRole}\r\n            setnewReason={setnewReason}/>\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <Settings newcdo={newcdo}\r\n                setnewcdo={setnewcdo}\r\n                newcds={newcds}\r\n                setnewcds={setnewcds}\r\n                newcos={newcos}\r\n                setnewcos={setnewcos}\r\n                newas={newas}\r\n                setnewas={setnewas}\r\n                newauthor = {newauthor}\r\n                setnewauthor ={setnewauthor}\r\n                persons={persons}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               newas={newas}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React,{useState} from 'react';\r\nimport Loginpage from './components/loginpage/Loginpage';\r\nimport Appcontent from './Appcontent'\r\n\r\nconst App = () => {\r\n\r\n    const [access, setnewaccess] = useState(false)\r\n\r\n\r\n    if (access) {\r\n        return <Appcontent />\r\n    } else {\r\n        return <Loginpage access={access} setnewaccess={setnewaccess}/>\r\n    }\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport {\n  ThemeProvider,\n  StyleReset} from \"atomize\";\nconst theme = {\n  colors: {\n    brand100: \"#F9F8FC\",\n    brand200: \"#F3F1FA\",\n    brand300: \"#E9E6F6\",\n    brand400: \"#D2CCEC\",\n    brand500: \"#BCB3E2\",\n    brand600: \"#9C8FD6\",\n    brand700: \"#6F5CC3\",\n    brand800: \"#553EB5\",\n    brand900: \"#382683\",\n  },grid: {\n    containerWidth: {\n        xs: \"540px\",\n        sm: \"720px\",\n        md: \"960px\",\n        lg: \"1156px\",\n        xl: \"1156px\"\n    }, gutterWidth: \"12px\",\n  }, \n};\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <ThemeProvider theme={theme}>\n    <StyleReset />\n    <App />\n    </ThemeProvider>\n\n  </StyletronProvider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}