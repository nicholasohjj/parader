{"version":3,"sources":["components/message.js","components/InsertNew/newGroupdropdown.js","components/InsertNew/newRoledropdown.js","components/reusable/newdate.js","components/InsertNew/newStatusDropDown.js","components/InsertNew/newName.js","components/InsertNew/newExcuse.js","components/InsertNew/formcontent.js","services/phoneservice.js","components/InsertNew/form.js","components/personnellist/updateExcuse.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/roleDropDown.js","components/personnellist/groupDropDown.js","components/personnellist/statusDropDown.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/filter.js","components/personnellist/personnelList.js","components/settings/newcdo.js","components/settings/newcds.js","components/settings/newcos.js","components/settings/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/Blueteam.js","components/contents/Redteam.js","components/contents/Excuses.js","components/contents/signature.js","components/contents/Others.js","components/contents/paradestate.js","Appcontent.js","App.js","index.js"],"names":["Message","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","NewGroupdropdown","setnewGroup","newGroup","menuList","p","x","y","value","onClick","event","setshowModal","showModal","console","log","target","getAttribute","d","useState","rounded","isOpen","menu","bg","focusBg","borderColor","focusBorderColor","textColor","textWeight","openSuffix","name","size","closeSuffix","toUpperCase","NewRoleDropDown","setnewRole","newRole","Today","Date","dd","getDate","mm","getMonth","yy","getFullYear","toString","substr","Newdate","NewStatusDropDown","setnewStatus","newStatus","setnewReason","detailresponse","prompt","justify","xs","lg","NewName","newName","setNewName","onChange","placeholder","prefix","cursor","pos","top","left","transform","window","open","NewExcuse","newexcuse","setnewExcuse","Formcontent","addName","onSubmit","type","hoverBg","r","l","shadow","hoverShadow","baseUrl","getAll","axios","get","then","response","data","addNew","newPerson","a","request","post","removePerson","id","delete","update","put","Form","setNewMessage","persons","setPersons","newReason","show","setShow","HandleShow","m","suffix","preventDefault","trim","status","toLowerCase","reason","group","excuse","role","nameCheck","filter","person","includes","length","confirm","phoneservice","updatedList","map","setTimeout","catch","error","concat","alert","UpdateExcuse","options","ModalSize","onClose","maxW","right","t","b","DetailModal","Handleclick","AlignCenterModal","align","textSize","DeleteModal","RoleDropDown","w","Groupdropdown","StatusDropDown","returnValue","Updatebuttons","Emoji","symbol","className","Emojidisplay","currentStatus","Reason","Filter","newFilter","handleNamefilter","Personnellist","setFilter","personnelToShow","NewCDO","setnewcdo","HQList","String","NewCDS","setnewcds","CDSList","NewCOS","setnewcos","COSList","Settings","newauthor","setnewas","setnewauthor","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","margin","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","Specrolelist","Speccurrent","Spectotal","Oprrolelist","Oprcurrent","Oprtotal","Adminrolelist","Admincurrent","Admintotal","Summary","newcdo","newcds","newcos","currentstrength","totalstrength","HQ","JSON","stringify","index","Blueteam","BlueteamList","Redteam","RedteamList","Excuse","Excuses","ExcuseList","Signature","Others","OthersList","ParadeState","Appcontent","newMessage","useEffect","allPersons","App","push","useHistory","frontendApi","process","navigate","to","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","grid","containerWidth","sm","md","xl","gutterWidth","document","getElementById"],"mappings":"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","file":"static/js/main.90330c97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message\r\n\r\n//not relevant","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewGroupdropdown = ({setnewGroup,newGroup}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Group: ${event.target.getAttribute(\"value\")}`)\r\n      setnewGroup(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value={newGroup} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Dropdown\r\n        rounded=\"xl\"\r\n        isOpen={showModal}\r\n        menu={menuList}\r\n        onClick={Handleclick}\r\n        bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n      >\r\n        {(newGroup)? `Group: ${newGroup.toUpperCase()}`: \"Group\"}\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\nexport default NewGroupdropdown;","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewRoleDropDown = ({setnewRole, newRole}) => {\r\n\r\n    const HandleUpdateRole = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Role: ${event.target.getAttribute(\"value\")}`)\r\n      setnewRole(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newRole} onClick ={HandleUpdateRole}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newRole)? `Role: ${newRole.toUpperCase()}`: \"Role\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewRoleDropDown;","let Today = new Date();\r\nlet dd = Today.getDate();\r\nlet mm = Today.getMonth()+1; \r\nconst yy = Today.getFullYear().toString().substr(-2);\r\n\r\nif(dd<10) dd=`0${dd}`\r\nif(mm<10) mm=`0${mm}`\r\n\r\nconst Newdate = `${dd}${mm}${yy}`\r\n\r\nexport default Newdate","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst NewStatusDropDown = ({setnewStatus,newStatus,setnewReason}) => {\r\n  \r\n  let detailresponse = ''\r\n\r\n    const handleStatusChange = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Status: ${event.target.getAttribute(\"value\")}`)\r\n      setnewStatus(event.target.getAttribute(\"value\"))\r\n  \r\n      if (event.target.getAttribute(\"value\") === 'mc') {\r\n        detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'ma') {\r\n        detailresponse = prompt('Details',`MA AT`)\r\n      } else if (event.target.getAttribute(\"value\") === 'off') {\r\n        detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'leave') {\r\n        detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'attached') {\r\n        detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n      } else if (event.target.getAttribute(\"value\") === 'others') {\r\n        detailresponse = prompt('Details',``)\r\n      } else if (event.target.getAttribute(\"value\") === 'oncourse') {\r\n        detailresponse = prompt('Details',``)\r\n      }\r\n      else {\r\n        detailresponse = ''\r\n      }\r\n      console.log(`Reason: ${detailresponse}`)\r\n      if (detailresponse) {\r\n        setnewReason(detailresponse.toUpperCase())\r\n      } else {\r\n        setnewReason('nil')\r\n\r\n      }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newStatus} onClick ={handleStatusChange}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n      <Dropdown\r\n          rounded=\"xl\"\r\n          isOpen={showModal}\r\n          menu={menuList}\r\n          onClick={Handleclick}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newStatus)? `Status: ${newStatus.toUpperCase()}`: \"Status\"}\r\n        </Dropdown>\r\n      </Div>\r\n        \r\n      );\r\n}\r\n\r\nexport default NewStatusDropDown\r\n;","import React from \"react\";\r\nimport {Div, Input, Icon } from \"atomize\";\r\n\r\nconst NewName = ({newName,setNewName}) => {\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(`Name: ${event.target.value}`)\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n  return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n<Input\r\n    rounded=\"xl\"\r\n    value={newName}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNameChange}\r\n    placeholder=\"Rank/Name\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewName","import React from \"react\";\r\nimport { Input, Icon, Div } from \"atomize\";\r\n\r\nconst NewExcuse = ({newexcuse,setnewExcuse}) => {\r\n\r\n    const handleExcuseChange = (event) => {\r\n        console.log(`Excuse: ${event.target.getAttribute(\"value\")}`)\r\n          setnewExcuse(event.target.value)\r\n        }\r\n\r\n  return (\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n    <Input\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"RemoveSolid\"\r\n    color=\"danger800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewExcuse","import React from 'react'\r\nimport NewGroupdropdown from './newGroupdropdown';\r\nimport NewRoleDropDown from './newRoledropdown'\r\nimport NewStatusDropDown from './newStatusDropDown'\r\nimport NewName from './newName'\r\nimport NewExcuse from './newExcuse';\r\nimport {Div,Button} from \"atomize\";\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n    return (\r\n      <Div>\r\n        <form onSubmit={addName}>\r\n          <NewName newName={newName} setNewName={setNewName}/>\r\n          <br/>\r\n          <NewExcuse newexcuse={newexcuse} setnewExcuse={setnewExcuse}/>\r\n          <br/>\r\n          <NewStatusDropDown setnewStatus={setnewStatus} newStatus={newStatus} setnewReason={setnewReason}/>\r\n          <br/>\r\n          <NewGroupdropdown setnewGroup={setnewGroup} newGroup={newGroup}/>\r\n          <br/>\r\n          <NewRoleDropDown setnewRole={setnewRole} newRole={newRole}/>\r\n          <br/>\r\n          <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Button\r\n            textColor=\"white\"\r\n            type='submit'\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black800\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\" \r\n              >\r\n                Submit\r\n            </Button>\r\n      </Div>\r\n        </form>\r\n      </Div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = async (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = async (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  const response = await request\r\n  return response.data\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\nconst Form = ({setNewMessage,persons,setPersons}) => {\r\n\r\n      const [ newName, setNewName ] = useState('')\r\nconst [ newStatus, setnewStatus ] = useState('')\r\nconst [ newReason, setnewReason ] = useState('')\r\nconst [ newGroup, setnewGroup ] = useState('')\r\nconst [ newexcuse, setnewExcuse ] = useState('')\r\nconst [ newRole, setnewRole ] = useState('')\r\n\r\nconst addName = (event) => {\r\n  event.preventDefault()\r\n  console.log(newexcuse)\r\n\r\n  const newPerson = {\r\n    name: newName.trim().toUpperCase(),\r\n    status: newStatus.toLowerCase(),\r\n    reason: (newReason) ? newReason : 'nil',\r\n    group: newGroup.toUpperCase(),\r\n    excuse: (newexcuse) ? newexcuse : 'nil',\r\n    role: newRole\r\n  }\r\n\r\n  const nameCheck = persons.filter(person=> \r\n    person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n    )\r\n  \r\n  console.log(nameCheck)\r\n\r\n  if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n    alert(\"All fields (other than medical excuses) must be filled.\")\r\n  } else if (nameCheck.length>0) {\r\n    if (window.confirm(`${newName.toUpperCase()} is already added to phonebook. Would you like to update the status?`)) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n        setNewMessage(`${newName.toUpperCase()} has been updated`)\r\n        setTimeout(()=>setNewMessage(null),5000)\r\n      })\r\n          .catch(error=> {\r\n            setNewMessage(`${newName.toUpperCase()} has been already been removed from the server`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n      )}\r\n    } else {\r\n      phoneservice\r\n        .addNew(newPerson)\r\n        .then(updatedList => {\r\n            setPersons(persons.concat(updatedList))\r\n            setNewMessage(`${newName.toUpperCase()} has been added`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n        .catch(error=> {\r\n          setNewMessage(`${newName.toUpperCase()} has already been added to the server`)\r\n          setTimeout(()=>setNewMessage(null),5000)\r\n        })\r\n      }\r\n      setnewStatus('')\r\n      setNewName('')\r\n      setnewReason('')\r\n      setnewGroup('')\r\n      setnewExcuse('')\r\n      setnewRole('')\r\n\r\n    }\r\n\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Add\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","import React from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport { Div, Button } from \"atomize\"\r\n\r\nconst UpdateExcuse = ({options,person,persons,setPersons}) => {\r\n    \r\n  const Handleupdateexcuse = (event,value) => {  \r\n\r\n    console.log(value)\r\n    let response = prompt('Current excuses', person.excuse)\r\n    if (response) {\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: response.toUpperCase(),\r\n        role: person.role\r\n    }\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (response) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))  \r\n    }\r\n\r\n    }\r\n    }\r\n\r\n    if (options) {\r\n      return (\r\n          <Div d=\"flex\">\r\n          <Button \r\n          bg=\"white\"\r\n          focusBg=\"info300\"\r\n          borderColor=\"info600\"\r\n          focusBorderColor=\"info800\"\r\n          textColor=\"info800\"\r\n          textWeight=\"500\"\r\n          m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n\r\n          aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleupdateexcuse}>\r\n        Excuses\r\n      </Button>\r\n        </Div> \r\n      )\r\n}\r\n    }\r\n\r\n    export default UpdateExcuse","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n      >\r\n        <p>NAME: {person.name}</p>\r\n        <p>STATUS: {person.status.toUpperCase()}</p>\r\n        <p>REASON: {person.reason.toUpperCase()}</p>\r\n        <p>GROUP: {person.group.toUpperCase()}</p>\r\n        <p>EXCUSES: {person.excuse.toUpperCase()}</p>\r\n        <p>ROLE: {person.role.toUpperCase()}</p>\r\n\r\n\r\n\r\n\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n          \r\n            bg=\"success700\"\r\n            hoverBg=\"success600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n          <Icon name=\"Info\" size=\"20px\" />\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"warning700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n        \r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"danger700\"\r\n            hoverBg=\"danger600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            <Icon name=\"Delete\" size=\"20px\" />\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown  \r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Role\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default RoleDropDown;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst Groupdropdown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: person.status,\r\n              reason: person.reason,\r\n              group: event.target.getAttribute(\"value\"),\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Group\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default Groupdropdown;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst StatusDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n\r\n      let returnValue = event.target.getAttribute(\"value\")\r\n\r\n      let newReason = ''\r\n      if (returnValue === 'mc') {\r\n        newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (returnValue === 'ma') {\r\n        newReason = prompt('Details',`MA AT`)\r\n      } else if (returnValue === 'off') {\r\n        newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (returnValue === 'leave') {\r\n        newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (returnValue === 'attached') {\r\n        newReason = prompt('Details',`ATTACHED OUT TO `)\r\n      } else if (returnValue === 'others') {\r\n        newReason = prompt('Details',``)\r\n      } else if (returnValue === 'oncourse') {\r\n        newReason = prompt('Details',``)\r\n      }\r\n       else {\r\n        newReason = ''\r\n      }\r\n  \r\n      if (newReason) {\r\n        newReason = newReason.toUpperCase()\r\n      } else {\r\n        newReason = 'nil'\r\n      }\r\n  \r\n      console.log(newReason)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: event.target.getAttribute(\"value\"),\r\n              reason: newReason,\r\n              group: person.group,\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Status\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default StatusDropDown\r\n;","import React, {useState} from 'react'\r\nimport UpdateExcuse from './updateExcuse'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleDropDown from './roleDropDown'\r\nimport Groupdropdown from './groupDropDown'\r\nimport StatusDropDown from './statusDropDown'\r\nimport { Div, Button, Icon } from 'atomize'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }}onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }} onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <StatusDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <Groupdropdown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n          <UpdateExcuse options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React from 'react'\r\nimport { Input,Icon, Div } from 'atomize'\r\n\r\nconst Filter = ({newFilter, handleNamefilter}) => {\r\n    return (\r\n      \r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n        <Input\r\n      \r\n    rounded=\"xl\"\r\n    value={newFilter}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNamefilter}\r\n    placeholder=\"Filter by name\"\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n    </Div>\r\n    )\r\n  }\r\n\r\n  export default Filter\r\n  //not relevant\r\n\r\n","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport Filter from './filter';\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n  const [ newFilter, setFilter ] = useState('')\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  const handleNamefilter = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n    }\r\n\r\n  const personnelToShow = (!newFilter.trim())\r\n  ? persons\r\n  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Edit\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Filter newFilter={newFilter} handleNamefilter={handleNamefilter}/>\r\n          <ol>\r\n            {personnelToShow.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </>\r\n      )\r\n  }\r\n  \r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDO = ({persons,setnewcdo}) => {\r\n    \r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n\r\n    const handlecdochange = (event) => {\r\n        console.log(`CDO: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcdo(event.target.getAttribute(\"value\"))\r\n      }\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    const HQList = persons.filter(person=> (String(person.role)).toLowerCase()==='hq') \r\n    console.log(HQList)\r\n    const menuList = (\r\n        <Div  p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdochange}>\r\n          <Anchor value=\"LTA SAM LAM\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            LTA SAM LAM\r\n          </Anchor>\r\n          <Anchor value=\"2LT MARY JANE\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            2LT MARY JANE\r\n          </Anchor>\r\n      </Div>\r\n    );\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <Dropdown \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDO\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDO\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDS = ({persons,setnewcds}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const handlecdschange = (event) => {\r\n        console.log(`CDS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcds(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const CDSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(CDSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdschange}>\r\n        {CDSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          COS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDS\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCOS = ({persons,setnewcos}) => {\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n  const Handleclick = () => {\r\n      setshowModal(!showModal)\r\n  }\r\n  \r\n\r\n    const handlecoschange = (event) => {\r\n        console.log(`COS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcos(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const COSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(COSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecoschange}>\r\n        {COSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n   \r\n    return (\r\n        <Dropdown\r\n        \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCOS\r\n;","import React, {useState} from \"react\";\r\nimport {Button, Icon, Div, Input } from \"atomize\";\r\nimport NewCDO from \"./newcdo\";\r\nimport NewCDS from \"./newcds\";\r\nimport NewCOS from \"./newcos\";\r\n\r\n\r\nconst Settings = ({\r\n    setnewcdo,\r\n    setnewcds,\r\n    setnewcos,\r\n    setnewas,\r\n    newauthor,\r\n    setnewauthor,\r\n    persons\r\n}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  const handleauthorchange = (event) => {\r\n    console.log(`Done by: ${event.target.value}`)\r\n    setnewauthor(event.target.value)\r\n  }\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon name=\"SettingsSolid\" size=\"20px\" color=\"white\"\r\n                m={{ l: \"1rem\" }}/>\r\n                } \r\n              >\r\n                Settings\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"SettingsSolid\"\r\n                size=\"16px\"\r\n                color=\"white\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Input\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    rounded=\"xl\"\r\n    value={newauthor}\r\n    onChange={handleauthorchange}\r\n    placeholder=\"Done By: (Rank/Name)\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n      />\r\n      </Div>\r\n          <NewCDO  persons={persons} setnewcdo={setnewcdo}/>\r\n          <NewCDS persons={persons} setnewcds={setnewcds}/>\r\n          <NewCOS persons={persons} setnewcos={setnewcos}/>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} to All, this is the strength for our team as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const Specrolelist = persons.filter(person=> (person.role==='specs'))\r\n  let Speccurrent = 0\r\n  Specrolelist.map(person=> (person.status==='present') ? (Speccurrent = Speccurrent+1) : Speccurrent)\r\n  const Spectotal = Specrolelist.length\r\n\r\n  const Oprrolelist = persons.filter(person=> (person.role==='opr'))\r\n  let Oprcurrent = 0\r\n  Oprrolelist.map(person=> (person.status==='present') ? (Oprcurrent = Oprcurrent+1) : Oprcurrent)\r\n  const Oprtotal = Oprrolelist.length\r\n\r\n  const Adminrolelist = persons.filter(person=> (person.role==='admin'))\r\n  let Admincurrent = 0\r\n  Adminrolelist.map(person=> (person.status==='present') ? (Admincurrent = Admincurrent+1) : Admincurrent)\r\n  const Admintotal = Adminrolelist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -Specialists: {Speccurrent}/{Spectotal} </p>\r\n          <p style={style}> -Operators: {Oprcurrent}/{Oprtotal} </p>\r\n          <p style={style}> -Administrators: {Admincurrent}/{Admintotal} </p>\r\n\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\nimport {Text} from \"atomize\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                }) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <Text style={style}>CDO: {newcdo.toUpperCase()}</Text>\r\n        <Text style={style}>CDS: {newcds.toUpperCase()}</Text>\r\n        <Text style={style}>COS: {newcos.toUpperCase()}</Text>\r\n        <br/>\r\n        <Text style={style}>Total Strength: {totalstrength}</Text>\r\n        <Text style={style}>Present Strength: {currentstrength}</Text> \r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        <Text style={style}>PRESENT IN CAMP: {currentstrength}</Text>\r\n        <br/>\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Blueteam = ({persons}) => {\r\n    \r\n    const BlueteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='blueteam') \r\n    console.log(`List of Blue Team members: ${JSON.stringify(BlueteamList)}`)\r\n    let currentstrength = 0\r\n    BlueteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = BlueteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>BLUE TEAM: {currentstrength}/{totalstrength}</p>\r\n            {BlueteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Blueteam ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Redteam = ({persons}) => {\r\n    \r\n    const RedteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='redteam') \r\n    console.log(`List of Red Team members: ${JSON.stringify(RedteamList)}`)\r\n    let currentstrength = 0\r\n    RedteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = RedteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>RED TEAM: {currentstrength}/{totalstrength}</p>\r\n            {RedteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Redteam","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>PERSONNEL WITH MEDICAL EXCUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Others = ({persons}) => {\r\n    \r\n    const OthersList = persons.filter(person=> (String(person.group)).toLowerCase()==='others') \r\n    console.log(`List of other members: ${JSON.stringify(OthersList)}`)\r\n    let currentstrength = 0\r\n    OthersList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = OthersList.length\r\n    // eslint-disable-next-line eqeqeq\r\n    if (totalstrength!='0') {\r\n      return (\r\n        <div>\r\n          <p style={style}>OTHERS: {currentstrength}/{totalstrength}</p>\r\n            {OthersList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Others ","import React from 'react'\r\nimport HQ from './hq' \r\nimport Blueteam from './Blueteam';\r\nimport Redteam from './Redteam'\r\nimport Excuses from './Excuses'\r\nimport Signature from \"./signature\"\r\nimport Others from './Others';\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <Blueteam persons={persons}/>\r\n    <br/>\r\n    <Redteam persons={persons}/>\r\n    <br/>\r\n    <Others persons={persons} />\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/> \r\n    \r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Message from './components/message'\r\nimport Form from './components/InsertNew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/contents/paradestate'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Message message={newMessage}/>\r\n      <Form setNewMessage={setNewMessage} persons={persons} setPersons={setPersons} />\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <Settings newcdo={newcdo}\r\n                setnewcdo={setnewcdo}\r\n                newcds={newcds}\r\n                setnewcds={setnewcds}\r\n                newcos={newcos}\r\n                setnewcos={setnewcos}\r\n                newauthor = {newauthor}\r\n                setnewauthor ={setnewauthor}\r\n                persons={persons}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React from 'react';\r\nimport Loginpage from './components/loginpage/Loginpage';\r\nimport Appcontent from './Appcontent'\r\nimport {\r\n    ClerkProvider,\r\n    SignedIn,\r\n    SignedOut,\r\n    UserButton,\r\n    useUser,\r\n    RedirectToSignIn,\r\n  } from \"@clerk/clerk-react\";\r\n  import { useHistory } from \"react-router-dom\";\r\n\r\nconst frontendApi = process.env.REACT_APP_CLERK_FRONTEND_API;\r\n\r\nconst App = () => {\r\n\r\n    const {push} = useHistory();\r\n\r\n        return (\r\n            <ClerkProvider frontendApi={frontendApi} navigate={(to) => push(to)}>\r\n            <SignedIn>\r\n            <UserButton />\r\n              <Appcontent />\r\n            </SignedIn>\r\n            <SignedOut>\r\n              <RedirectToSignIn />\r\n            </SignedOut>\r\n          </ClerkProvider>\r\n        )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\nimport { ThemeProvider, StyleReset} from \"atomize\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nconst theme = {\r\n  colors: {\r\n    brand100: \"#F9F8FC\",\r\n    brand200: \"#F3F1FA\",\r\n    brand300: \"#E9E6F6\",\r\n    brand400: \"#D2CCEC\",\r\n    brand500: \"#BCB3E2\",\r\n    brand600: \"#9C8FD6\",\r\n    brand700: \"#6F5CC3\",\r\n    brand800: \"#553EB5\",\r\n    brand900: \"#382683\",\r\n  },grid: {\r\n    containerWidth: {\r\n        xs: \"540px\",\r\n        sm: \"720px\",\r\n        md: \"960px\",\r\n        lg: \"1156px\",\r\n        xl: \"1156px\"\r\n    }, gutterWidth: \"12px\",\r\n  }, \r\n};\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n// 2. Provide the engine to the app\r\n// debug engine needs inlined source maps\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <ThemeProvider theme={theme}>\r\n    <StyleReset />\r\n    <App />\r\n    </ThemeProvider>\r\n  </StyletronProvider>\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}