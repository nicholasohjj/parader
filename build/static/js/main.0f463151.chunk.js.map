{"version":3,"sources":["Loginpage.js","components/message.js","components/insertnew/newGroupdropdown.js","components/insertnew/newRoledropdown.js","components/reusable/newdate.js","components/insertnew/newStatusDropDown.js","components/insertnew/newName.js","components/insertnew/newExcuse.js","components/insertnew/formcontent.js","components/insertnew/form.js","services/phoneservice.js","components/personnellist/updateExcuse.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/roleDropDown.js","components/personnellist/groupDropDown.js","components/personnellist/statusDropDown.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/personnelList.js","components/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/CCP.js","components/contents/CSP.js","components/contents/Excuses.js","components/contents/signature.js","components/paradestate.js","Appcontent.js","App.js","index.js"],"names":["Loginpage","access","setnewaccess","useState","pass","setnewpass","class","align","type","placeholder","onChange","event","target","value","Message","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","NewGroupdropdown","setnewGroup","newGroup","menuList","p","x","y","onClick","setshowModal","showModal","console","log","getAttribute","d","isOpen","menu","toUpperCase","NewRoleDropDown","setnewRole","newRole","Today","Date","dd","getDate","mm","getMonth","yy","getFullYear","toString","substr","Newdate","NewStatusDropDown","setnewStatus","newStatus","setnewReason","detailresponse","prompt","NewName","newName","setNewName","prefix","name","size","cursor","pos","top","left","transform","NewExcuse","newexcuse","setnewExcuse","Formcontent","addName","onSubmit","suffix","m","l","bg","hoverBg","variant","Form","show","setShow","HandleShow","r","shadow","hoverShadow","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","UpdateExcuse","options","person","persons","setPersons","Button","excuse","status","reason","group","role","nameCheck","filter","toLowerCase","includes","phoneservice","updatedList","map","ModalSize","onClose","rounded","maxW","right","t","b","JSON","stringify","justify","textColor","DetailModal","Handleclick","AlignCenterModal","textSize","DeleteModal","RoleDropDown","w","Groupdropdown","StatusDropDown","returnValue","newReason","Updatebuttons","Emoji","symbol","className","Emojidisplay","currentStatus","Reason","Personnellist","Settings","newcdo","handlecdochange","newcds","handlecdschange","newcos","handlecoschange","newas","handleaschange","newauthor","handleauthorchange","TextField","label","multiline","maxRows","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","margin","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","length","SevenSpecrolelist","Sevenspeccurrent","SevenSpectotal","IC2rolelist","IC2current","IC2total","ISrolelist","IScurrent","IStotal","Summary","currentstrength","totalstrength","HQ","HQList","String","index","CCP","CCPList","CSP","CSPList","Excuse","Excuses","ExcuseList","Signature","ParadeState","Appcontent","setnewcdo","setnewcds","setnewcos","setnewas","setnewauthor","newMessage","setNewMessage","useEffect","allPersons","preventDefault","trim","window","confirm","setTimeout","catch","error","concat","alert","App","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","document","getElementById"],"mappings":"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","file":"static/js/main.0f463151.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport './loginpage.css';\r\n\r\nconst Loginpage = ({access,setnewaccess}) => {\r\n    const [pass, setnewpass] = useState('')\r\n\r\n\r\n    const Handlelogin = (event) => {\r\n        setnewpass(event.target.value)\r\n    }\r\n\r\n    if (pass==='sigparadestate') {\r\n        setnewaccess(!access)\r\n    } \r\n\r\n    return (\r\n        <>\r\n        <div class=\"main\">\r\n    <p class=\"sign\" align=\"center\">Sign in</p>\r\n    <form class=\"form1\" />\r\n          <input class=\"pass\" type=\"password\" align=\"center\" placeholder=\"Password\" onChange={Handlelogin}/>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginpage","import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message\r\n\r\n//not relevant","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewGroupdropdown = ({setnewGroup,newGroup}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Group: ${event.target.getAttribute(\"value\")}`)\r\n      setnewGroup(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value={newGroup} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ccp' >\r\n            {\"FG1 - CCP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='csp'>\r\n            {\"FG2 - CSP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Dropdown  \r\n      isOpen={showModal}\r\n      onClick={Handleclick}\r\n      menu={menuList}\r\n    >\r\n      {(newGroup)? `GROUP: ${newGroup.toUpperCase()}`: \"GROUP\"}\r\n    </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewGroupdropdown;","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewRoleDropDown = ({setnewRole, newRole}) => {\r\n\r\n    const HandleUpdateRole = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Role: ${event.target.getAttribute(\"value\")}`)\r\n      setnewRole(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newRole} onClick ={HandleUpdateRole}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='sevenspec' >\r\n            {\"7th Mono Spec\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ic2'>\r\n            {\"IC2 Opr\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='is'>\r\n            {\"IS Opr\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown  \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n        >\r\n          {(newRole)? `ROLE: ${newRole.toUpperCase()}`: \"ROLE\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewRoleDropDown;","let Today = new Date();\r\nlet dd = Today.getDate();\r\nlet mm = Today.getMonth()+1; \r\nconst yy = Today.getFullYear().toString().substr(-2);\r\n\r\nif(dd<10) dd=`0${dd}`\r\nif(mm<10) mm=`0${mm}`\r\n\r\nconst Newdate = `${dd}${mm}${yy}`\r\n\r\nexport default Newdate","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst NewStatusDropDown = ({setnewStatus,newStatus,setnewReason}) => {\r\n\r\n    const handleStatusChange = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Status: ${event.target.getAttribute(\"value\")}`)\r\n      setnewStatus(event.target.getAttribute(\"value\"))\r\n  \r\n      let detailresponse = ''\r\n      if (event.target.getAttribute(\"value\") === 'mc') {\r\n        detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'ma') {\r\n        detailresponse = prompt('Details',`MA AT`)\r\n      } else if (event.target.getAttribute(\"value\") === 'off') {\r\n        detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'leave') {\r\n        detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'attached') {\r\n        detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n      } else if (event.target.getAttribute(\"value\") === 'others') {\r\n        detailresponse = prompt('Details',``)\r\n      } else if (event.target.getAttribute(\"value\") === 'oncourse') {\r\n        detailresponse = prompt('Details',``)\r\n      }\r\n      else {\r\n        detailresponse = ''\r\n      }\r\n      console.log(`Reason: ${detailresponse}`)\r\n      if (detailresponse) {\r\n        setnewReason(detailresponse.toUpperCase())\r\n      }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newStatus} onClick ={handleStatusChange}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          isOpen={showModal}\r\n          menu={menuList}\r\n          onClick={Handleclick}\r\n        >\r\n          {(newStatus)? `STATUS: ${newStatus.toUpperCase()}`: \"STATUS\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewStatusDropDown\r\n;","import React from \"react\";\r\nimport { Input, Icon } from \"atomize\";\r\n\r\nconst NewName = ({newName,setNewName}) => {\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(`Name: ${event.target.value}`)\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n  return (\r\n    <Input\r\n    value={newName}\r\n    onChange={handleNameChange}\r\n    placeholder=\"Rank/Name\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"warning800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default NewName","import React from \"react\";\r\nimport { Input, Icon } from \"atomize\";\r\n\r\nconst NewExcuse = ({newexcuse,setnewExcuse}) => {\r\n\r\n    const handleExcuseChange = (event) => {\r\n        console.log(`Excuse: ${event.target.value}`)\r\n        setnewExcuse(event.target.value)\r\n      }\r\n\r\n  return (\r\n    <Input\r\n    value={newexcuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"RemoveSolid\"\r\n    color=\"danger800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default NewExcuse","import React from 'react'\r\nimport NewGroupdropdown from './newGroupdropdown';\r\nimport NewRoleDropDown from './newRoledropdown'\r\nimport NewStatusDropDown from './newStatusDropDown'\r\nimport NewName from './newName'\r\nimport NewExcuse from './newExcuse';\r\nimport {Icon,Button} from \"atomize\";\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={addName}>\r\n          <NewName newName={newName} setNewName={setNewName}/>\r\n          <br/>\r\n          <NewStatusDropDown setnewStatus={setnewStatus} newStatus={newStatus} setnewReason={setnewReason}/>\r\n          <br/>\r\n          <NewGroupdropdown setnewGroup={setnewGroup} newGroup={newGroup}/>\r\n          <br/>\r\n          <NewRoleDropDown setnewRole={setnewRole} newRole={newRole}/>\r\n          <br/>\r\n          <NewExcuse newexcuse={newexcuse} setnewExcuse={setnewExcuse}/>\r\n          <br/>\r\n          <Button suffix={\r\n      <Icon\r\n        name=\"LongRight\"\r\n        size=\"16px\"\r\n        color=\"white\"\r\n        m={{ l: \"1rem\" }}\r\n      />}\r\n      bg=\"black\"\r\n      hoverBg=\"black400\"\r\n      variant=\"contained\" color=\"primary\" type=\"submit\">Add</Button>\r\n          \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst Form = ({addName,\r\n    newName,\r\n    setNewName,\r\n    newStatus,\r\n    setnewStatus,\r\n    newGroup,\r\n    setnewGroup,\r\n    newexcuse,\r\n    setnewExcuse,\r\n    newRole,\r\n    setnewRole,\r\n    setnewReason,\r\n    }) => {\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\">\r\n            <Button\r\n            prefix={\r\n            <Icon\r\n              name=\"EyeSolid\"\r\n              size=\"16px\"\r\n              color=\"white\"\r\n              m={{ r: \"0.5rem\" }}\r\n              />}\r\n              bg=\"black\"\r\n              hoverBg=\"black400\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              >\r\n                Insert New\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Div d=\"flex\">\r\n            <Button\r\n            prefix={\r\n            <Icon\r\n              name=\"EyeSolid\"\r\n              size=\"16px\"\r\n              color=\"white\"\r\n              m={{ r: \"0.5rem\" }}\r\n              />}\r\n              bg=\"black\"\r\n              hoverBg=\"black400\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response=>response.data)\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport {Button} from \"@material-ui/core\"\r\n\r\n\r\nconst UpdateExcuse = ({options,person,persons,setPersons}) => {\r\n    \r\n  const Handleupdateexcuse = (event,value) => {  \r\n\r\n    console.log(value)\r\n    let response = prompt('Current excuses', person.excuse)\r\n    if (response) {\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: response.toUpperCase(),\r\n        role: person.role\r\n    }\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (response) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))  \r\n    }\r\n\r\n    }\r\n    }\r\n\r\n    if (options) {\r\n      return (\r\n        <div >\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleupdateexcuse}>\r\n        Excuses\r\n      </Button>\r\n        </div> \r\n      )\r\n}\r\n    }\r\n\r\n    export default UpdateExcuse","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n      >\r\n        {JSON.stringify({person}, null, 2)}\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n        <Button onClick={onClose} bg=\"info700\">\r\n          OK\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"info700\"\r\n            hoverBg=\"info600\"\r\n            m={{ r: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            Details\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"warning700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n        \r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"info700\"\r\n            hoverBg=\"info600\"\r\n            m={{ b: \"1rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            Delete\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='sevenspec' >\r\n            {\"7th Mono Spec\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ic2'>\r\n            {\"IC2 Opr\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='is'>\r\n            {\"IS Opr\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown  \r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n        >\r\n          ROLE\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default RoleDropDown;","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst Groupdropdown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: person.status,\r\n              reason: person.reason,\r\n              group: event.target.getAttribute(\"value\"),\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ccp' >\r\n            {\"FG1 - CCP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='csp'>\r\n            {\"FG2 - CSP\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n        >\r\n          GROUP\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default Groupdropdown;","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst StatusDropDown = ({person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n\r\n      let returnValue = event.target.getAttribute(\"value\")\r\n\r\n      let newReason = ''\r\n      if (returnValue === 'mc') {\r\n        newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (returnValue === 'ma') {\r\n        newReason = prompt('Details',`MA AT`)\r\n      } else if (returnValue === 'off') {\r\n        newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (returnValue === 'leave') {\r\n        newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (returnValue === 'attached') {\r\n        newReason = prompt('Details',`ATTACHED OUT TO `)\r\n      } else if (returnValue === 'others') {\r\n        newReason = prompt('Details',``)\r\n      } else if (returnValue === 'oncourse') {\r\n        newReason = prompt('Details',``)\r\n      }\r\n       else {\r\n        newReason = ''\r\n      }\r\n  \r\n      if (newReason) {\r\n        newReason = newReason.toUpperCase()\r\n      }\r\n  \r\n      console.log(newReason)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: event.target.getAttribute(\"value\"),\r\n              reason: newReason,\r\n              group: person.group,\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n        >\r\n          STATUS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default StatusDropDown\r\n;","import React, {useState} from 'react'\r\nimport UpdateExcuse from './updateExcuse'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleDropDown from './roleDropDown'\r\nimport Groupdropdown from './groupDropDown'\r\nimport StatusDropDown from './statusDropDown'\r\nimport { Div, Button } from 'atomize'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button color=\"warning700\" onClick={HandleShow}>Update</Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button onClick={HandleShow}>Hide</Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <StatusDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <Groupdropdown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <UpdateExcuse options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n\r\n          </Div>\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n      <Div d=\"flex\">\r\n        <Button\r\n        suffix={\r\n        <Icon\r\n        name=\"Down\"\r\n        size=\"16px\"\r\n        color=\"white\"\r\n        m={{ l: \"1rem\" }}\r\n      />}\r\n      bg=\"black\"\r\n      hoverBg=\"black400\"\r\n      shadow=\"3\"\r\n      hoverShadow=\"4\"\r\n      m={{ r: \"1rem\" }}\r\n      onClick={HandleShow}\r\n      >\r\n    Edit\r\n    </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <div>\r\n      <Div d=\"flex\">\r\n        <Button\r\n        suffix={\r\n        <Icon\r\n        name=\"Up\"\r\n        size=\"16px\"\r\n        color=\"white\"\r\n        m={{ l: \"1rem\" }}\r\n      />}\r\n      bg=\"black\"\r\n      hoverBg=\"black400\"\r\n      shadow=\"3\"\r\n      hoverShadow=\"4\"\r\n      m={{ r: \"1rem\" }}\r\n      onClick={HandleShow}\r\n      >\r\n    Hide\r\n    </Button>\r\n    </Div>\r\n          <br/>\r\n          <ol>\r\n            {persons.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      )\r\n  }\r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React from \"react\";\r\nimport { TextField} from '@material-ui/core';\r\n\r\nconst Settings = ({\r\n    newcdo,\r\n    handlecdochange,\r\n    newcds,\r\n    handlecdschange,\r\n    newcos,\r\n    handlecoschange,\r\n    newas,\r\n    handleaschange,\r\n    newauthor,\r\n    handleauthorchange\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"CDO (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcdo}\r\n              onChange={handlecdochange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"CDS (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcds}\r\n              onChange={handlecdschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"COS (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcos}\r\n              onChange={handlecoschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"A/S (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newas}\r\n              onChange={handleaschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Done By: (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newauthor}\r\n              onChange={handleauthorchange}\r\n              />  \r\n          </div>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} Commanders, this is the strength for Signal Company as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const SevenSpecrolelist = persons.filter(person=> (person.role==='sevenspec'))\r\n  let Sevenspeccurrent = 0\r\n  SevenSpecrolelist.map(person=> (person.status==='present') ? (Sevenspeccurrent = Sevenspeccurrent+1) : Sevenspeccurrent)\r\n  const SevenSpectotal = SevenSpecrolelist.length\r\n\r\n  const IC2rolelist = persons.filter(person=> (person.role==='ic2'))\r\n  let IC2current = 0\r\n  IC2rolelist.map(person=> (person.status==='present') ? (IC2current = IC2current+1) : IC2current)\r\n  const IC2total = IC2rolelist.length\r\n\r\n\r\n  const ISrolelist = persons.filter(person=> (person.role==='is'))\r\n  let IScurrent = 0\r\n  ISrolelist.map(person=> (person.status==='present') ? (IScurrent = IScurrent+1) : IScurrent)\r\n  const IStotal = ISrolelist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -Coy HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -7th Mono Spec: {Sevenspeccurrent}/{SevenSpectotal} </p>\r\n          <p style={style}> -IC2 Opr: {IC2current}/{IC2total} </p>\r\n          <p style={style}> -IS Opr: {IScurrent}/{IStotal} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                newas}) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <p style={style}>CDO: {newcdo.toUpperCase()}</p>\r\n        <p style={style}>CDS: {newcds.toUpperCase()}</p>\r\n        <p style={style}>COS: {newcos.toUpperCase()}</p>\r\n        <p style={style}>ARMSKOTE: {newas.toUpperCase()}</p>\r\n        <br/>\r\n        <p style={style}>Total Strength: {totalstrength}</p>\r\n        <p style={style}>Present Strength: {currentstrength}</p>\r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CCP = ({persons}) => {\r\n    \r\n    const CCPList = persons.filter(person=> (String(person.group)).toLowerCase()==='ccp') \r\n    console.log(`List of CCP personnel: ${JSON.stringify(CCPList)}`)\r\n    let currentstrength = 0\r\n    CCPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CCPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG1 - CCP: {currentstrength}/{totalstrength}</p>\r\n            {CCPList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CCP ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CSP = ({persons}) => {\r\n    \r\n    const CSPList = persons.filter(person=> (String(person.group)).toLowerCase()==='csp') \r\n    console.log(`List of CSP personnel: ${JSON.stringify(CSPList)}`)\r\n    let currentstrength = 0\r\n    CSPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CSPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG2 - CSP: {currentstrength}/{totalstrength}</p>\r\n            {CSPList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CSP","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>STATUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from 'react'\r\nimport HQ from './contents/hq' \r\nimport CCP from './contents/CCP';\r\nimport CSP from './contents/CSP'\r\nimport Excuses from './contents/Excuses'\r\nimport Signature from \"./contents/signature\"\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <CCP persons={persons}/>\r\n    <br/>\r\n    <CSP persons={persons}/>\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/>\r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Message from './components/message'\r\nimport Form from './components/insertnew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/paradestate'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newStatus, setnewStatus ] = useState('')\r\n  const [ newReason, setnewReason ] = useState('')\r\n\r\n  const [ newGroup, setnewGroup ] = useState('')\r\n  const [ newexcuse, setnewExcuse ] = useState('')\r\n  const [ newRole, setnewRole ] = useState('')\r\n  \r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newas, setnewas] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n\r\n\r\n\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n  const handlecdochange = (event) => {\r\n      console.log(`CDO: ${event.target.value}`)\r\n      setnewcdo((event.target.value))\r\n    }\r\n\r\n  const handlecdschange = (event) => {\r\n      console.log(`CDS: ${event.target.value}`)\r\n      setnewcds(event.target.value)\r\n    }\r\n\r\n  const handlecoschange = (event) => {\r\n      console.log(`COS: ${event.target.value}`)\r\n      setnewcos(event.target.value)\r\n    }\r\n\r\n    const handleaschange = (event) => {\r\n      console.log(`Armskote: ${event.target.value}`)\r\n      setnewas(event.target.value)\r\n    }\r\n\r\n    const handleauthorchange = (event) => {\r\n      console.log(`Done by: ${event.target.value}`)\r\n      setnewauthor(event.target.value)\r\n    }\r\n\r\n  //Adds new element to persons array\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      name: newName.trim().toUpperCase(),\r\n      status: newStatus.toLowerCase(),\r\n      reason: (newReason) ? newReason : 'nil',\r\n      group: newGroup.toUpperCase(),\r\n      excuse: (newexcuse) ? newexcuse.trim : 'nil',\r\n      role: newRole\r\n    }\r\n\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n      )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n      alert(\"All fields (besides medical excuses) must be filled\")\r\n    } else if (nameCheck.length>0) {\r\n      if (window.confirm(`${newName.toUpperCase()} is already added to phonebook. Would you like to update the status?`)) {\r\n        return (\r\n          phoneservice\r\n            .update(nameCheck[0].id, newPerson)\r\n            .then(updatedList=> {setPersons(persons.map(person=>\r\n                person.id !== nameCheck[0].id\r\n                  ? person\r\n                  : updatedList))\r\n          setNewMessage(`${newName.toUpperCase()} has been updated`)\r\n          setTimeout(()=>setNewMessage(null),5000)\r\n        })\r\n            .catch(error=> {\r\n              setNewMessage(`${newName.toUpperCase()} has been already been removed from the server`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n        )}\r\n      } else {\r\n        phoneservice\r\n          .addNew(newPerson)\r\n          .then(updatedList => {\r\n              setPersons(persons.concat(updatedList))\r\n              setNewMessage(`${newName.toUpperCase()} has been added`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n          .catch(error=> {\r\n            setNewMessage(`${newName.toUpperCase()} has already been added to the server`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n        }\r\n        setnewStatus('')\r\n        setNewName('')\r\n        setnewReason('')\r\n        setnewGroup('')\r\n        setnewExcuse('')\r\n        setnewRole('')\r\n\r\n      }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Parade State Application (For Internal Use Only)</h2>\r\n      <Message message={newMessage}/>\r\n      <Form addName={addName}\r\n            newName={newName}\r\n            setNewName={setNewName}\r\n            newStatus={newStatus}\r\n            setnewStatus={setnewStatus}\r\n            newGroup = {newGroup} \r\n            setnewGroup = {setnewGroup}\r\n            newexcuse ={newexcuse}\r\n            setnewExcuse = {setnewExcuse}\r\n            newRole ={newRole}\r\n            setnewRole = {setnewRole}\r\n            setnewReason={setnewReason}/>\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <h2>Settings</h2>\r\n      <Settings newcdo={newcdo}\r\n                handlecdochange={handlecdochange}\r\n                newcds={newcds}\r\n                handlecdschange={handlecdschange}\r\n                newcos={newcos}\r\n                handlecoschange={handlecoschange}\r\n                newas={newas}\r\n                handleaschange={handleaschange}\r\n                newauthor = {newauthor}\r\n                handleauthorchange ={handleauthorchange}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               newas={newas}\r\n               newauthor = {newauthor}\r\n               handleauthorchange ={handleauthorchange}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React,{useState} from 'react';\r\nimport Loginpage from './Loginpage'\r\nimport Appcontent from './Appcontent'\r\n\r\nconst App = () => {\r\n\r\n    const [access, setnewaccess] = useState(false)\r\n\r\n\r\n    if (access) {\r\n        return <Appcontent />\r\n    } else {\r\n        return <Loginpage access={access} setnewaccess={setnewaccess}/>\r\n    }\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport {\n  ThemeProvider,\n  StyleReset} from \"atomize\";\nconst theme = {\n  colors: {\n    brand100: \"#F9F8FC\",\n    brand200: \"#F3F1FA\",\n    brand300: \"#E9E6F6\",\n    brand400: \"#D2CCEC\",\n    brand500: \"#BCB3E2\",\n    brand600: \"#9C8FD6\",\n    brand700: \"#6F5CC3\",\n    brand800: \"#553EB5\",\n    brand900: \"#382683\",\n  }\n};\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <ThemeProvider theme={theme}>\n    <StyleReset />\n    <App />\n    </ThemeProvider>\n\n  </StyletronProvider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}