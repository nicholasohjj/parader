{"version":3,"sources":["components/insertnew/newGroupdropdown.js","components/insertnew/newRoledropdown.js","components/reusable/newdate.js","components/insertnew/newStatusDropDown.js","components/insertnew/newName.js","components/insertnew/newExcuse.js","components/insertnew/formcontent.js","services/phoneservice.js","components/insertnew/notifications.js","components/insertnew/form.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/roleDropDown.js","components/personnellist/groupDropDown.js","components/personnellist/statusDropDown.js","components/personnellist/updateexcusemodal.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/filter.js","components/personnellist/personnelList.js","components/settings/newcdo.js","components/settings/newcds.js","components/settings/newcos.js","components/settings/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/Blueteam.js","components/contents/Redteam.js","components/contents/Excuses.js","components/contents/signature.js","components/contents/Others.js","components/contents/paradestate.js","Appcontent.js","App.js","index.js"],"names":["NewGroupdropdown","setnewGroup","newGroup","menuList","p","x","y","value","onClick","event","setshowModal","showModal","console","log","target","getAttribute","d","useState","rounded","isOpen","menu","bg","focusBg","borderColor","focusBorderColor","textColor","textWeight","openSuffix","name","color","size","closeSuffix","toUpperCase","NewRoleDropDown","setnewRole","newRole","Newdate","String","dayjs","format","NewStatusDropDown","setnewStatus","newStatus","setnewReason","detailresponse","prompt","justify","xs","lg","NewName","newName","setNewName","onChange","placeholder","prefix","cursor","pos","top","left","transform","window","open","NewExcuse","newexcuse","setnewExcuse","Formcontent","addName","onSubmit","type","hoverBg","r","l","shadow","hoverShadow","baseUrl","getAll","axios","get","then","response","data","addNew","newPerson","a","request","post","removePerson","id","delete","update","put","Notifications","setnewalert","newalert","newupdate","setnewupdate","newwarning","setnewwarning","newinput","setnewinput","onClose","m","Form","setNewMessage","persons","setPersons","newReason","show","setShow","HandleShow","suffix","preventDefault","trim","status","toLowerCase","reason","group","excuse","role","nameCheck","filter","person","includes","length","confirm","phoneservice","updatedList","map","catch","error","concat","ModalSize","maxW","right","t","b","DetailModal","Handleclick","AlignCenterModal","align","textSize","DeleteModal","RoleDropDown","newinfo","setnewinfo","w","Groupdropdown","StatusDropDown","returnValue","defaultvalue","UpdateexcuseModal","Updatebuttons","options","Emoji","symbol","className","Emojidisplay","currentStatus","Reason","Filter","newFilter","handleNamefilter","Personnellist","setFilter","personnelToShow","NewCDO","setnewcdo","HQList","NewCDS","setnewcds","CDSList","NewCOS","setnewcos","COSList","Settings","newauthor","setnewas","setnewauthor","Today","Date","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","style","padding","margin","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","Specrolelist","Speccurrent","Spectotal","Oprrolelist","Oprcurrent","Oprtotal","Adminrolelist","Admincurrent","Admintotal","Summary","newcdo","newcds","newcos","currentstrength","totalstrength","HQ","JSON","stringify","index","Blueteam","BlueteamList","Redteam","RedteamList","Excuse","Excuses","ExcuseList","Signature","Others","OthersList","ParadeState","Appcontent","firstName","useUser","useEffect","allPersons","App","push","useHistory","frontendApi","process","navigate","to","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","grid","containerWidth","sm","md","xl","gutterWidth","document","getElementById"],"mappings":"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","file":"static/js/main.ba109f83.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewGroupdropdown = ({setnewGroup,newGroup}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Group: ${event.target.getAttribute(\"value\")}`)\r\n      setnewGroup(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value={newGroup} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Dropdown\r\n        rounded=\"xl\"\r\n        isOpen={showModal}\r\n        menu={menuList}\r\n        onClick={Handleclick}\r\n        bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n      >\r\n        {(newGroup)? `Group: ${newGroup.toUpperCase()}`: \"Group\"}\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\nexport default NewGroupdropdown;","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewRoleDropDown = ({setnewRole, newRole}) => {\r\n\r\n    const HandleUpdateRole = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Role: ${event.target.getAttribute(\"value\")}`)\r\n      setnewRole(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newRole} onClick ={HandleUpdateRole}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newRole)? `Role: ${newRole.toUpperCase()}`: \"Role\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewRoleDropDown;","import dayjs from 'dayjs';\r\n\r\nconst Newdate = String(dayjs().format('DDMMYY'))\r\n\r\n\r\n\r\nexport default Newdate","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst NewStatusDropDown = ({setnewStatus,newStatus,setnewReason}) => {\r\n  \r\n  let detailresponse = ''\r\n\r\n    const handleStatusChange = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Status: ${event.target.getAttribute(\"value\")}`)\r\n      setnewStatus(event.target.getAttribute(\"value\"))\r\n  \r\n      if (event.target.getAttribute(\"value\") === 'mc') {\r\n        detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'ma') {\r\n        detailresponse = prompt('Details',`MA AT`)\r\n      } else if (event.target.getAttribute(\"value\") === 'off') {\r\n        detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'leave') {\r\n        detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'attached') {\r\n        detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n      } else if (event.target.getAttribute(\"value\") === 'others') {\r\n        detailresponse = prompt('Details',``)\r\n      } else if (event.target.getAttribute(\"value\") === 'oncourse') {\r\n        detailresponse = prompt('Details',``)\r\n      }\r\n      else {\r\n        detailresponse = ''\r\n      }\r\n      console.log(`Reason: ${detailresponse}`)\r\n      if (detailresponse) {\r\n        setnewReason(detailresponse.toUpperCase())\r\n      } else {\r\n        setnewReason('nil')\r\n\r\n      }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newStatus} onClick ={handleStatusChange}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n      <Dropdown\r\n          rounded=\"xl\"\r\n          isOpen={showModal}\r\n          menu={menuList}\r\n          onClick={Handleclick}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newStatus)? `Status: ${newStatus.toUpperCase()}`: \"Status\"}\r\n        </Dropdown>\r\n      </Div>\r\n        \r\n      );\r\n}\r\n\r\nexport default NewStatusDropDown\r\n;","import React from \"react\";\r\nimport {Div, Input, Icon } from \"atomize\";\r\n\r\nconst NewName = ({newName,setNewName}) => {\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(`Name: ${event.target.value}`)\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n  return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n<Input\r\n    rounded=\"xl\"\r\n    value={newName}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNameChange}\r\n    placeholder=\"Rank/Name\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewName","import React from \"react\";\r\nimport { Input, Icon, Div } from \"atomize\";\r\n\r\nconst NewExcuse = ({newexcuse,setnewExcuse}) => {\r\n\r\n    const handleExcuseChange = (event) => {\r\n        console.log(`Excuse: ${event.target.getAttribute(\"value\")}`)\r\n          setnewExcuse(event.target.value)\r\n        }\r\n\r\n  return (\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n    <Input\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"RemoveSolid\"\r\n    color=\"danger800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewExcuse","import React from 'react'\r\nimport NewGroupdropdown from './newGroupdropdown';\r\nimport NewRoleDropDown from './newRoledropdown'\r\nimport NewStatusDropDown from './newStatusDropDown'\r\nimport NewName from './newName'\r\nimport NewExcuse from './newExcuse';\r\nimport {Div,Button} from \"atomize\";\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n    return (\r\n      <Div>\r\n        <form onSubmit={addName}>\r\n          <NewName newName={newName} setNewName={setNewName}/>\r\n          <br/>\r\n          <NewExcuse newexcuse={newexcuse} setnewExcuse={setnewExcuse}/>\r\n          <br/>\r\n          <NewStatusDropDown setnewStatus={setnewStatus} newStatus={newStatus} setnewReason={setnewReason}/>\r\n          <br/>\r\n          <NewGroupdropdown setnewGroup={setnewGroup} newGroup={newGroup}/>\r\n          <br/>\r\n          <NewRoleDropDown setnewRole={setnewRole} newRole={newRole}/>\r\n          <br/>\r\n          <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Button\r\n            textColor=\"white\"\r\n            type='submit'\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black800\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\" \r\n              >\r\n                Submit\r\n            </Button>\r\n      </Div>\r\n        </form>\r\n      </Div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = async (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = async (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  const response = await request\r\n  return response.data\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React from \"react\"\r\nimport { Notification, Icon } from \"atomize\"\r\n\r\nconst Notifications = ({newName,\r\n    setnewalert,\r\n    newalert,\r\n    newupdate,\r\n    setnewupdate,\r\n    newwarning,\r\n    setnewwarning,\r\n    newinput,\r\n    setnewinput}) => {\r\n    return (\r\n        <>\r\n        <Notification\r\n          bg=\"danger700\"\r\n          isOpen={newalert}\r\n          onClose={()=> {setnewalert(!newalert)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"CloseSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          All fields (other than medical excuses) must be filled.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"success700\"\r\n          isOpen={newupdate}\r\n          onClose={() => setnewupdate(!newupdate)}\r\n          prefix={\r\n            <Icon\r\n              name=\"Success\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          {newName.toUpperCase()} has been updated.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"warning700\"\r\n          isOpen={newwarning}\r\n          onClose={() => setnewwarning(!newwarning)}\r\n          prefix={\r\n            <Icon\r\n            name=\"AlertSolid\"\r\n            color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          {newName.toUpperCase()} has already been removed from the server.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"success700\"\r\n          isOpen={newinput}\r\n          onClose={() => setnewinput(!newinput)}\r\n          prefix={\r\n            <Icon\r\n              name=\"Success\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Name added.\r\n        </Notification>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Notifications from \"./notifications\";\r\n\r\n\r\nconst Form = ({setNewMessage,persons,setPersons}) => {\r\n\r\nconst [ newName, setNewName ] = useState('')\r\nconst [ newStatus, setnewStatus ] = useState('')\r\nconst [ newReason, setnewReason ] = useState('')\r\nconst [ newGroup, setnewGroup ] = useState('')\r\nconst [ newexcuse, setnewExcuse ] = useState('')\r\nconst [ newRole, setnewRole ] = useState('')\r\nconst [newalert, setnewalert] = useState(false)\r\nconst [newupdate, setnewupdate] = useState(false)\r\nconst [newwarning, setnewwarning] = useState(false)\r\nconst [newinput, setnewinput] = useState(false)\r\nconst addName = (event) => {\r\n  event.preventDefault()\r\n  console.log(newexcuse)\r\n\r\n  const newPerson = {\r\n    name: newName.trim().toUpperCase(),\r\n    status: newStatus.toLowerCase(),\r\n    reason: (newReason) ? newReason : 'nil',\r\n    group: newGroup.toUpperCase(),\r\n    excuse: (newexcuse) ? newexcuse : 'nil',\r\n    role: newRole\r\n  }\r\n\r\n  const nameCheck = persons.filter(person=> \r\n    person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n    )\r\n  \r\n  console.log(nameCheck)\r\n\r\n  if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n    setnewalert(!newalert)\r\n  } else if (nameCheck.length>0) {\r\n    if (window.confirm(`${newName.toUpperCase()} is already added to nominal roll. Would you like to update the status?`)) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n                setnewupdate(!newupdate)\r\n      })\r\n          .catch(error=> {\r\n            setnewwarning(!newwarning)\r\n\r\n          })\r\n      )}\r\n    } else {\r\n      phoneservice\r\n        .addNew(newPerson)\r\n        .then(updatedList => {\r\n            setPersons(persons.concat(updatedList))\r\n            setnewinput(!newinput)\r\n          })\r\n        .catch(error=> {\r\n          setnewwarning(!newwarning)\r\n        })\r\n      }\r\n      setnewStatus('')\r\n      setNewName('')\r\n      setnewReason('')\r\n      setnewGroup('')\r\n      setnewExcuse('')\r\n      setnewRole('')\r\n\r\n    }\r\n\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Add\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Notifications newName={newName} \r\n                          setnewalert ={setnewalert}\r\n                          newalert = {newalert}\r\n                          newupdate ={newupdate}\r\n                          setnewupdate ={setnewupdate}\r\n                          newwarning={newwarning}\r\n                          setnewwarning={setnewwarning}\r\n                          newinput={newinput}\r\n                          setnewinput={setnewinput}/>\r\n            <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n      bg=\"success300\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n        textColor=\"black\"\r\n        >\r\n        <p>NAME: {person.name}</p>\r\n        <p>STATUS: {person.status.toUpperCase()}</p>\r\n        <p>REASON: {person.reason.toUpperCase()}</p>\r\n        <p>GROUP: {person.group.toUpperCase()}</p>\r\n        <p>EXCUSES: {person.excuse.toUpperCase()}</p>\r\n        <p>ROLE: {person.role.toUpperCase()}</p>\r\n\r\n\r\n\r\n\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"success700\"\r\n          hoverBg=\"success600\"\r\n          textColor=\"black\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n          \r\n            bg=\"success700\"\r\n            hoverBg=\"success600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n          <Icon name=\"Info\" size=\"20px\" />\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text} from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"danger700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"danger700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n\r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"danger700\"\r\n            hoverBg=\"danger600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            <Icon name=\"Delete\" size=\"20px\" />\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleDropDown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n      <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Role Updated\r\n        </Notification>\r\n        <Dropdown  \r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Role\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default RoleDropDown;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst Groupdropdown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: person.status,\r\n              reason: person.reason,\r\n              group: event.target.getAttribute(\"value\"),\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n        <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Group Updated\r\n        </Notification>\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Group\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default Groupdropdown;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\nconst StatusDropDown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n\r\n      let returnValue = event.target.getAttribute(\"value\")\r\n\r\n      let newReason = ''\r\n      if (returnValue === 'mc') {\r\n        newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (returnValue === 'ma') {\r\n        newReason = prompt('Details',`MA AT`)\r\n      } else if (returnValue === 'off') {\r\n        newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (returnValue === 'leave') {\r\n        newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (returnValue === 'attached') {\r\n        newReason = prompt('Details',`ATTACHED OUT TO `)\r\n      } else if (returnValue === 'others') {\r\n        newReason = prompt('Details',``)\r\n      } else if (returnValue === 'oncourse') {\r\n        newReason = prompt('Details',``)\r\n      }\r\n       else {\r\n        newReason = ''\r\n      }\r\n  \r\n      if (newReason) {\r\n        newReason = newReason.toUpperCase()\r\n      } else {\r\n        newReason = 'nil'\r\n      }\r\n  \r\n      console.log(newReason)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: event.target.getAttribute(\"value\"),\r\n              reason: newReason,\r\n              group: person.group,\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n      <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Status Updated\r\n        </Notification>\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Status\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default StatusDropDown\r\n;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Input, Notification } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person, setnewExcuse,newexcuse}) => {\r\n  \r\n  const handleExcuseChange = (event) => {\r\n    console.log(`Excuse: ${event.target.value}`)\r\n    setnewExcuse(event.target.value)\r\n    }\r\n\r\n    console.log(person.excuse)\r\n  \r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" maxW=\"32rem\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n      <Icon\r\n          name=\"History\"\r\n          color=\"black\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Input\r\n        d='flex'\r\n        justify=\"flex-end\"\r\n        m={{ r: \"1rem\" }}\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    defaultvalue={person.excuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    \r\n    />\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Update\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UpdateexcuseModal = ({setPersons, persons, person}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const [newexcuse, setnewExcuse ] = useState('')\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n      console.log((newexcuse.toUpperCase()))\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: (newexcuse.trim()) ? newexcuse.trim().toUpperCase() : 'nil',\r\n        role: person.role   \r\n    }  \r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n      setshowModal(!showModal)\r\n      phoneservice\r\n      .update(nameCheck[0].id, newPerson)\r\n      .then(updatedList=> {setPersons(persons.map(person=>\r\n          person.id !== nameCheck[0].id\r\n            ? person\r\n            : updatedList))\r\n            setnewinfo(!newinfo)\r\n\r\n          })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    return (\r\n        <Div d='flex'>\r\n          <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Medical Excuses Updated\r\n        </Notification>\r\n          <Button \r\n          bg=\"white\"\r\n          focusBg=\"info300\"\r\n          borderColor=\"info600\"\r\n          focusBorderColor=\"info800\"\r\n          textColor=\"info800\"\r\n          textWeight=\"500\"\r\n          m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n\r\n          aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleclick}>\r\n        Excuses\r\n      </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n            setnewExcuse={setnewExcuse}\r\n            newexcuse={newexcuse}\r\n          />\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default UpdateexcuseModal;","import React, {useState} from 'react'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleDropDown from './roleDropDown'\r\nimport Groupdropdown from './groupDropDown'\r\nimport StatusDropDown from './statusDropDown'\r\nimport { Div, Button, Icon } from 'atomize'\r\nimport UpdateexcuseModal from './updateexcusemodal'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }}onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }} onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <StatusDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <Groupdropdown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n          <UpdateexcuseModal id={id} setPersons={setPersons} persons={persons} person={person} />\r\n          </Div>\r\n\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React from 'react'\r\nimport { Input,Icon, Div } from 'atomize'\r\n\r\nconst Filter = ({newFilter, handleNamefilter}) => {\r\n    return (\r\n      \r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n        <Input\r\n      \r\n    rounded=\"xl\"\r\n    value={newFilter}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNamefilter}\r\n    placeholder=\"Filter by name\"\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n    </Div>\r\n    )\r\n  }\r\n\r\n  export default Filter\r\n  //not relevant\r\n\r\n","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport Filter from './filter';\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n  const [ newFilter, setFilter ] = useState('')\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  const handleNamefilter = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n    }\r\n\r\n  const personnelToShow = (!newFilter.trim())\r\n  ? persons\r\n  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Edit\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Filter newFilter={newFilter} handleNamefilter={handleNamefilter}/>\r\n          <ol>\r\n            {personnelToShow.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </>\r\n      )\r\n  }\r\n  \r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDO = ({persons,setnewcdo}) => {\r\n    \r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n\r\n    const handlecdochange = (event) => {\r\n        console.log(`CDO: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcdo(event.target.getAttribute(\"value\"))\r\n      }\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    const HQList = persons.filter(person=> (String(person.role)).toLowerCase()==='hq') \r\n    console.log(HQList)\r\n    const menuList = (\r\n        <Div  p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdochange}>\r\n          <Anchor value=\"LTA SAM LAM\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            LTA SAM LAM\r\n          </Anchor>\r\n          <Anchor value=\"2LT MARY JANE\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            2LT MARY JANE\r\n          </Anchor>\r\n      </Div>\r\n    );\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <Dropdown \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDO\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDO\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDS = ({persons,setnewcds}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const handlecdschange = (event) => {\r\n        console.log(`CDS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcds(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const CDSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(CDSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdschange}>\r\n        {CDSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          COS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDS\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCOS = ({persons,setnewcos}) => {\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n  const Handleclick = () => {\r\n      setshowModal(!showModal)\r\n  }\r\n  \r\n\r\n    const handlecoschange = (event) => {\r\n        console.log(`COS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcos(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const COSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(COSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecoschange}>\r\n        {COSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n   \r\n    return (\r\n        <Dropdown\r\n        \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCOS\r\n;","import React, {useState} from \"react\";\r\nimport {Button, Icon, Div, Input } from \"atomize\";\r\nimport NewCDO from \"./newcdo\";\r\nimport NewCDS from \"./newcds\";\r\nimport NewCOS from \"./newcos\";\r\n\r\n\r\nconst Settings = ({\r\n    setnewcdo,\r\n    setnewcds,\r\n    setnewcos,\r\n    setnewas,\r\n    newauthor,\r\n    setnewauthor,\r\n    persons\r\n}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  const handleauthorchange = (event) => {\r\n    console.log(`Done by: ${event.target.value}`)\r\n    setnewauthor(event.target.value)\r\n  }\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon name=\"SettingsSolid\" size=\"20px\" color=\"white\"\r\n                m={{ l: \"1rem\" }}/>\r\n                } \r\n              >\r\n                Settings\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"SettingsSolid\"\r\n                size=\"16px\"\r\n                color=\"white\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Input\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    rounded=\"xl\"\r\n    value={newauthor}\r\n    onChange={handleauthorchange}\r\n    placeholder=\"Done By: (Rank/Name)\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n      />\r\n      </Div>\r\n          <NewCDO  persons={persons} setnewcdo={setnewcdo}/>\r\n          <NewCDS persons={persons} setnewcds={setnewcds}/>\r\n          <NewCOS persons={persons} setnewcos={setnewcos}/>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} to All, this is the strength for our team as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const Specrolelist = persons.filter(person=> (person.role==='specs'))\r\n  let Speccurrent = 0\r\n  Specrolelist.map(person=> (person.status==='present') ? (Speccurrent = Speccurrent+1) : Speccurrent)\r\n  const Spectotal = Specrolelist.length\r\n\r\n  const Oprrolelist = persons.filter(person=> (person.role==='opr'))\r\n  let Oprcurrent = 0\r\n  Oprrolelist.map(person=> (person.status==='present') ? (Oprcurrent = Oprcurrent+1) : Oprcurrent)\r\n  const Oprtotal = Oprrolelist.length\r\n\r\n  const Adminrolelist = persons.filter(person=> (person.role==='admin'))\r\n  let Admincurrent = 0\r\n  Adminrolelist.map(person=> (person.status==='present') ? (Admincurrent = Admincurrent+1) : Admincurrent)\r\n  const Admintotal = Adminrolelist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -Specialists: {Speccurrent}/{Spectotal} </p>\r\n          <p style={style}> -Operators: {Oprcurrent}/{Oprtotal} </p>\r\n          <p style={style}> -Administrators: {Admincurrent}/{Admintotal} </p>\r\n\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\nimport {Text} from \"atomize\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                }) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <Text style={style}>CDO: {newcdo.toUpperCase()}</Text>\r\n        <Text style={style}>CDS: {newcds.toUpperCase()}</Text>\r\n        <Text style={style}>COS: {newcos.toUpperCase()}</Text>\r\n        <br/>\r\n        <Text style={style}>Total Strength: {totalstrength}</Text>\r\n        <Text style={style}>Present Strength: {currentstrength}</Text> \r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        <Text style={style}>PRESENT IN CAMP: {currentstrength}</Text>\r\n        <br/>\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Blueteam = ({persons}) => {\r\n    \r\n    const BlueteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='blueteam') \r\n    console.log(`List of Blue Team members: ${JSON.stringify(BlueteamList)}`)\r\n    let currentstrength = 0\r\n    BlueteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = BlueteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>BLUE TEAM: {currentstrength}/{totalstrength}</p>\r\n            {BlueteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Blueteam ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Redteam = ({persons}) => {\r\n    \r\n    const RedteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='redteam') \r\n    console.log(`List of Red Team members: ${JSON.stringify(RedteamList)}`)\r\n    let currentstrength = 0\r\n    RedteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = RedteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>RED TEAM: {currentstrength}/{totalstrength}</p>\r\n            {RedteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Redteam","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>PERSONNEL WITH MEDICAL EXCUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Others = ({persons}) => {\r\n    \r\n    const OthersList = persons.filter(person=> (String(person.group)).toLowerCase()==='others') \r\n    console.log(`List of other members: ${JSON.stringify(OthersList)}`)\r\n    let currentstrength = 0\r\n    OthersList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = OthersList.length\r\n    // eslint-disable-next-line eqeqeq\r\n    if (totalstrength!='0') {\r\n      return (\r\n        <div>\r\n          <p style={style}>OTHERS: {currentstrength}/{totalstrength}</p>\r\n            {OthersList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Others ","import React from 'react'\r\nimport HQ from './hq' \r\nimport Blueteam from './Blueteam';\r\nimport Redteam from './Redteam'\r\nimport Excuses from './Excuses'\r\nimport Signature from \"./signature\"\r\nimport Others from './Others';\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <Blueteam persons={persons}/>\r\n    <br/>\r\n    <Redteam persons={persons}/>\r\n    <br/>\r\n    <Others persons={persons} />\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/> \r\n    \r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Form from './components/insertnew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/contents/paradestate'\r\nimport { useUser, UserButton } from '@clerk/clerk-react'\r\nimport { Div, Text } from 'atomize'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n  const { firstName } = useUser();\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n  return (\r\n    <Div>\r\n      <Div d='flex' align=\"center\"p=\"1rem\">\r\n      <UserButton />\r\n      <Text m={{ l: \"0.5rem\"}}>Hello, {firstName}!</Text> \r\n      </Div>\r\n      <Form persons={persons} setPersons={setPersons} />\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <Settings newcdo={newcdo}\r\n                setnewcdo={setnewcdo}\r\n                newcds={newcds}\r\n                setnewcds={setnewcds}\r\n                newcos={newcos}\r\n                setnewcos={setnewcos}\r\n                newauthor = {newauthor}\r\n                setnewauthor ={setnewauthor}\r\n                persons={persons}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </Div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React from 'react';\r\nimport Appcontent from './Appcontent'\r\nimport {\r\n    ClerkProvider,\r\n    SignedIn,\r\n    SignedOut,\r\n    RedirectToSignIn,\r\n  } from \"@clerk/clerk-react\";\r\n  import { useHistory } from \"react-router-dom\";\r\n\r\nconst frontendApi = process.env.REACT_APP_CLERK_FRONTEND_API;\r\n\r\nconst App = () => {\r\n\r\n    const {push} = useHistory();\r\n\r\n        return (\r\n            <ClerkProvider frontendApi={frontendApi} navigate={(to) => push(to)}>\r\n            <SignedIn>\r\n              <Appcontent />\r\n            </SignedIn>\r\n            <SignedOut>\r\n              <RedirectToSignIn />\r\n            </SignedOut>\r\n          </ClerkProvider>\r\n        )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\nimport { ThemeProvider, StyleReset} from \"atomize\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nconst theme = {\r\n  colors: {\r\n    brand100: \"#F9F8FC\",\r\n    brand200: \"#F3F1FA\",\r\n    brand300: \"#E9E6F6\",\r\n    brand400: \"#D2CCEC\",\r\n    brand500: \"#BCB3E2\",\r\n    brand600: \"#9C8FD6\",\r\n    brand700: \"#6F5CC3\",\r\n    brand800: \"#553EB5\",\r\n    brand900: \"#382683\",\r\n  },grid: {\r\n    containerWidth: {\r\n        xs: \"540px\",\r\n        sm: \"720px\",\r\n        md: \"960px\",\r\n        lg: \"1156px\",\r\n        xl: \"1156px\"\r\n    }, gutterWidth: \"12px\",\r\n  }, \r\n};\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n// 2. Provide the engine to the app\r\n// debug engine needs inlined source maps\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <ThemeProvider theme={theme}>\r\n    <StyleReset />\r\n    <App />\r\n    </ThemeProvider>\r\n  </StyletronProvider>\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}