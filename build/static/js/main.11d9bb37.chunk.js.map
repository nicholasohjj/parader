{"version":3,"sources":["components/form.js","components/phoneservice.js","components/button.js","components/emoji.js","components/results.js","components/message.js","components/greeting.js","components/absentees.js","components/paradestate.js","App.js","index.js"],"names":["Input","text","value","onChange","Form","addName","newName","handleNameChange","newStatus","handleStatusChange","onSubmit","toLowerCase","type","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Button","person","setPersons","persons","useState","options","setOptions","Options","onClick","HandleDelete","HandleUpdate","window","confirm","name","phoneservice","filter","Emoji","symbol","className","role","Emojidisplay","currentStatus","Results","map","status","Message","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Today","Date","dd","getDate","mm","getMonth","yy","getFullYear","toString","substr","hours","getHours","minutes","getMinutes","CurrentDate","CurrentTime","greeting","Greeting","Absentees","mc","ma","off","leave","attached","others","stayout","totalAbsentee","ParadeState","currentstrength","totalstrength","length","App","setNewName","setnewStatus","newMessage","setNewMessage","useEffect","allPersons","event","preventDefault","trim","toUpperCase","nameCheck","includes","console","log","updatedList","setTimeout","catch","error","concat","alert","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d9bb37.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Input = ({text,value,onChange}) => {\r\n    return (\r\n      <div>\r\n      {text}: \r\n            <input value={value} onChange={onChange}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\nconst Form = ({addName,newName,handleNameChange,newStatus,handleStatusChange}) => {\r\n    return (\r\n      <div>\r\n        <form onSubmit={addName}>\r\n        <Input text=\"Rank/Name \" value={newName} onChange={handleNameChange}/>\r\n        <Input text=\"Status (PRESENT/MC/MA/OFF/LEAVE/ATTACHED/OTHERS/STAYOUT) \" value={newStatus.toLowerCase()} onChange={handleStatusChange}/>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Form","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response=>response.data)\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React, {useState} from 'react'\r\nimport phoneservice from './phoneservice'\r\n\r\n\r\n\r\n\r\nconst Button = ({person, id, setPersons, persons}) => {\r\n\r\n  const [options, setOptions] = useState(false)\r\n\r\n  const Options = () => {\r\n    if (options) {\r\n      return (\r\n        <>\r\n        <button onClick={HandleDelete}>✅</button>\r\n        <button onClick={HandleUpdate}>😷</button>\r\n        <button onClick={HandleUpdate}>👨🏻‍⚕️</button>\r\n        <button onClick={HandleUpdate}>🚫</button>\r\n        <button onClick={HandleUpdate}>🚪</button>\r\n        <button onClick={HandleUpdate}>🅰</button>\r\n        <button onClick={HandleUpdate}>🗒</button>\r\n        <button onClick={HandleUpdate}>🏠</button>\r\n        </> \r\n      )} else\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    } \r\n\r\n\r\n  const HandleDelete = () => {\r\n    if (window.confirm(`Do you want to delete ${person.name}`)) {\r\n      phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n        }\r\n  }\r\n\r\n  const HandleUpdate = () => setOptions(!options)\r\n\r\n\r\n  return (\r\n    <>\r\n    <button onClick={HandleDelete}>Delete</button>\r\n    <button onClick={HandleUpdate}>Update</button>\r\n    <br/>\r\n    <Options />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from 'react'\r\nimport Button from './button'\r\nimport Emojidisplay from './emoji';\r\n\r\nconst Results = ({setPersons, persons}) => {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {persons.map(person=>\r\n            <li key={person.name}>\r\n              {person.name}\r\n              <Emojidisplay currentStatus ={person.status} />\r\n              <Button person={person} id={person.id} setPersons={setPersons} persons={persons}/>\r\n            </li>\r\n          )}   \r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Results","import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\n\r\n\r\nlet Today = new Date();\r\nlet dd = Today.getDate();\r\nlet mm = Today.getMonth()+1; \r\nconst yy = Today.getFullYear().toString().substr(-2);\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\nif(dd<10) dd=`0${dd}`\r\nif(mm<10) mm=`0${mm}`\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentDate = `${mm}${dd}${yy}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} Commanders , this is the strength for Signal Company as of {CurrentTime} on {CurrentDate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from './emoji'\r\n\r\nconst Absentees = ({setPersons, persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout\r\n      return (\r\n      <div>\r\n        <p>Absentees: {totalAbsentee}</p>\r\n        <ul>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          </li>\r\n          <li>\r\n          <p>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\nimport Emojidisplay from './emoji'\r\n\r\n\r\n\r\nconst ParadeState = ({setPersons, persons}) => {\r\n  \r\n  let currentstrength = 0\r\n  persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n  const totalstrength = persons.length\r\n\r\n    return (\r\n      <div>\r\n        <p>HQ {currentstrength}/{totalstrength}</p>\r\n        <ol>\r\n          {persons.map(person=>\r\n            <li key={person.name}>\r\n              {person.name}\r\n              <Emojidisplay currentStatus ={person.status} />\r\n            </li>\r\n          )}   \r\n        </ol>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Form from './components/form'\r\nimport Results from './components/results' \r\nimport phoneservice from './components/phoneservice'\r\nimport Message from './components/message'\r\nimport Greeting from './components/greeting'\r\nimport Absentees from './components/absentees'\r\nimport ParadeState from './components/paradestate'\r\n\r\n//App component\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newStatus, setnewStatus ] = useState('')\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n  \r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleStatusChange = (event) => {\r\n    console.log(event.target.value)\r\n    setnewStatus(event.target.value)\r\n  }\r\n\r\n  \r\n\r\n  //Adds new element to persons array\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      name: newName.trim().toUpperCase(),\r\n      status: newStatus.toLowerCase(),\r\n    }\r\n\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n      )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (!newName.trim() || !newStatus.trim()) {\r\n      alert(\"Name/status must be filled\")\r\n    } else if (nameCheck.length>0) {\r\n      if (window.confirm(`${newName} is already added to phonebook. Would you like to update the status?`)) {\r\n        return (\r\n          phoneservice\r\n            .update(nameCheck[0].id, newPerson)\r\n            .then(updatedList=> {setPersons(persons.map(person=>\r\n                person.id !== nameCheck[0].id\r\n                  ? person\r\n                  : updatedList))\r\n          setNewMessage(`${newName} has been updated`)\r\n          setTimeout(()=>setNewMessage(null),5000)\r\n        })\r\n            .catch(error=> {\r\n              setNewMessage(`${newName} has been already been removed from the server`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n        )}\r\n      } else {\r\n        phoneservice\r\n          .addNew(newPerson)\r\n          .then(updatedList => {\r\n              setPersons(persons.concat(updatedList))\r\n              setNewMessage(`${newName} has been added`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n          .catch(error=> {\r\n            setNewMessage(`${newName} has been already been added to the server`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n        }\r\n        setnewStatus('')\r\n        setNewName('')\r\n      }\r\n\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <h2>Parade State Application</h2>\r\n      <Message message={newMessage}/>\r\n      <h2>Add a new</h2>\r\n      <Form addName={addName}\r\n            newName={newName}\r\n            handleNameChange={handleNameChange}\r\n            newStatus={newStatus}\r\n            handleStatusChange={handleStatusChange}/>\r\n      <h2>List of Personnel</h2>\r\n      <Results setPersons={setPersons} persons={persons} />\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Absentees setPersons={setPersons} persons={persons} />\r\n      <ParadeState setPersons={setPersons} persons={persons} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App ","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}