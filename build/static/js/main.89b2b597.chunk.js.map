{"version":3,"sources":["components/message.js","components/InsertNew/newGroupdropdown.js","components/InsertNew/newRoledropdown.js","components/reusable/newdate.js","components/InsertNew/newStatusDropDown.js","components/InsertNew/newName.js","components/InsertNew/newExcuse.js","components/InsertNew/formcontent.js","services/phoneservice.js","components/InsertNew/notifications.js","components/InsertNew/form.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/roleDropDown.js","components/personnellist/groupDropDown.js","components/personnellist/statusDropDown.js","components/personnellist/updateexcusemodal.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/filter.js","components/personnellist/personnelList.js","components/settings/newcdo.js","components/settings/newcds.js","components/settings/newcos.js","components/settings/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/Blueteam.js","components/contents/Redteam.js","components/contents/Excuses.js","components/contents/signature.js","components/contents/Others.js","components/contents/paradestate.js","Appcontent.js","App.js","index.js"],"names":["Message","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","NewGroupdropdown","setnewGroup","newGroup","menuList","p","x","y","value","onClick","event","setshowModal","showModal","console","log","target","getAttribute","d","useState","rounded","isOpen","menu","bg","focusBg","borderColor","focusBorderColor","textColor","textWeight","openSuffix","name","size","closeSuffix","toUpperCase","NewRoleDropDown","setnewRole","newRole","Newdate","String","dayjs","format","NewStatusDropDown","setnewStatus","newStatus","setnewReason","detailresponse","prompt","justify","xs","lg","NewName","newName","setNewName","onChange","placeholder","prefix","cursor","pos","top","left","transform","window","open","NewExcuse","newexcuse","setnewExcuse","Formcontent","addName","onSubmit","type","hoverBg","r","l","shadow","hoverShadow","baseUrl","getAll","axios","get","then","response","data","addNew","newPerson","a","request","post","removePerson","id","delete","update","put","Notifications","setnewalert","newalert","newupdate","setnewupdate","newwarning","setnewwarning","newinput","setnewinput","onClose","m","Form","setNewMessage","persons","setPersons","newReason","show","setShow","HandleShow","suffix","preventDefault","trim","status","toLowerCase","reason","group","excuse","role","nameCheck","filter","person","includes","length","confirm","phoneservice","updatedList","map","catch","error","concat","ModalSize","maxW","right","t","b","DetailModal","Handleclick","AlignCenterModal","align","textSize","DeleteModal","RoleDropDown","newinfo","setnewinfo","w","Groupdropdown","StatusDropDown","returnValue","defaultvalue","UpdateexcuseModal","Updatebuttons","options","Emoji","symbol","className","Emojidisplay","currentStatus","Reason","Filter","newFilter","handleNamefilter","Personnellist","setFilter","personnelToShow","NewCDO","setnewcdo","HQList","NewCDS","setnewcds","CDSList","NewCOS","setnewcos","COSList","Settings","newauthor","setnewas","setnewauthor","Today","Date","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","margin","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","Specrolelist","Speccurrent","Spectotal","Oprrolelist","Oprcurrent","Oprtotal","Adminrolelist","Admincurrent","Admintotal","Summary","newcdo","newcds","newcos","currentstrength","totalstrength","HQ","JSON","stringify","index","Blueteam","BlueteamList","Redteam","RedteamList","Excuse","Excuses","ExcuseList","Signature","Others","OthersList","ParadeState","Appcontent","newMessage","firstName","useUser","useEffect","allPersons","App","push","useHistory","frontendApi","process","navigate","to","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","theme","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","grid","containerWidth","sm","md","xl","gutterWidth","document","getElementById"],"mappings":"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","file":"static/js/main.89b2b597.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message\r\n\r\n//not relevant","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewGroupdropdown = ({setnewGroup,newGroup}) => {\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Group: ${event.target.getAttribute(\"value\")}`)\r\n      setnewGroup(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value={newGroup} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Dropdown\r\n        rounded=\"xl\"\r\n        isOpen={showModal}\r\n        menu={menuList}\r\n        onClick={Handleclick}\r\n        bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n      >\r\n        {(newGroup)? `Group: ${newGroup.toUpperCase()}`: \"Group\"}\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\nexport default NewGroupdropdown;","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\nconst NewRoleDropDown = ({setnewRole, newRole}) => {\r\n\r\n    const HandleUpdateRole = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Role: ${event.target.getAttribute(\"value\")}`)\r\n      setnewRole(event.target.getAttribute(\"value\"))\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newRole} onClick ={HandleUpdateRole}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newRole)? `Role: ${newRole.toUpperCase()}`: \"Role\"}\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewRoleDropDown;","import dayjs from 'dayjs';\r\n\r\nconst Newdate = String(dayjs().format('DDMMYY'))\r\n\r\n\r\n\r\nexport default Newdate","import React, {useState} from \"react\";\r\nimport {Icon, Div, Dropdown, Anchor} from \"atomize\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\n\r\n\r\n\r\nconst NewStatusDropDown = ({setnewStatus,newStatus,setnewReason}) => {\r\n  \r\n  let detailresponse = ''\r\n\r\n    const handleStatusChange = (event) => {\r\n      setshowModal(!showModal)\r\n      console.log(`Status: ${event.target.getAttribute(\"value\")}`)\r\n      setnewStatus(event.target.getAttribute(\"value\"))\r\n  \r\n      if (event.target.getAttribute(\"value\") === 'mc') {\r\n        detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'ma') {\r\n        detailresponse = prompt('Details',`MA AT`)\r\n      } else if (event.target.getAttribute(\"value\") === 'off') {\r\n        detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'leave') {\r\n        detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (event.target.getAttribute(\"value\") === 'attached') {\r\n        detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n      } else if (event.target.getAttribute(\"value\") === 'others') {\r\n        detailresponse = prompt('Details',``)\r\n      } else if (event.target.getAttribute(\"value\") === 'oncourse') {\r\n        detailresponse = prompt('Details',``)\r\n      }\r\n      else {\r\n        detailresponse = ''\r\n      }\r\n      console.log(`Reason: ${detailresponse}`)\r\n      if (detailresponse) {\r\n        setnewReason(detailresponse.toUpperCase())\r\n      } else {\r\n        setnewReason('nil')\r\n\r\n      }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} value ={newStatus} onClick ={handleStatusChange}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n      <Dropdown\r\n          rounded=\"xl\"\r\n          isOpen={showModal}\r\n          menu={menuList}\r\n          onClick={Handleclick}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          {(newStatus)? `Status: ${newStatus.toUpperCase()}`: \"Status\"}\r\n        </Dropdown>\r\n      </Div>\r\n        \r\n      );\r\n}\r\n\r\nexport default NewStatusDropDown\r\n;","import React from \"react\";\r\nimport {Div, Input, Icon } from \"atomize\";\r\n\r\nconst NewName = ({newName,setNewName}) => {\r\n\r\n    const handleNameChange = (event) => {\r\n        console.log(`Name: ${event.target.value}`)\r\n        setNewName(event.target.value)\r\n      }\r\n\r\n  return (\r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n<Input\r\n    rounded=\"xl\"\r\n    value={newName}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNameChange}\r\n    placeholder=\"Rank/Name\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewName","import React from \"react\";\r\nimport { Input, Icon, Div } from \"atomize\";\r\n\r\nconst NewExcuse = ({newexcuse,setnewExcuse}) => {\r\n\r\n    const handleExcuseChange = (event) => {\r\n        console.log(`Excuse: ${event.target.getAttribute(\"value\")}`)\r\n          setnewExcuse(event.target.value)\r\n        }\r\n\r\n  return (\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n    <Input\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"RemoveSolid\"\r\n    color=\"danger800\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n    />\r\n      </Div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NewExcuse","import React from 'react'\r\nimport NewGroupdropdown from './newGroupdropdown';\r\nimport NewRoleDropDown from './newRoledropdown'\r\nimport NewStatusDropDown from './newStatusDropDown'\r\nimport NewName from './newName'\r\nimport NewExcuse from './newExcuse';\r\nimport {Div,Button} from \"atomize\";\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n    return (\r\n      <Div>\r\n        <form onSubmit={addName}>\r\n          <NewName newName={newName} setNewName={setNewName}/>\r\n          <br/>\r\n          <NewExcuse newexcuse={newexcuse} setnewExcuse={setnewExcuse}/>\r\n          <br/>\r\n          <NewStatusDropDown setnewStatus={setnewStatus} newStatus={newStatus} setnewReason={setnewReason}/>\r\n          <br/>\r\n          <NewGroupdropdown setnewGroup={setnewGroup} newGroup={newGroup}/>\r\n          <br/>\r\n          <NewRoleDropDown setnewRole={setnewRole} newRole={newRole}/>\r\n          <br/>\r\n          <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Button\r\n            textColor=\"white\"\r\n            type='submit'\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black800\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\" \r\n              >\r\n                Submit\r\n            </Button>\r\n      </Div>\r\n        </form>\r\n      </Div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = async (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  const response = await request\r\n  return response.data\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = async (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  const response = await request\r\n  return response.data\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React from \"react\"\r\nimport { Notification, Icon } from \"atomize\"\r\n\r\nconst Notifications = ({newName,\r\n    setnewalert,\r\n    newalert,\r\n    newupdate,\r\n    setnewupdate,\r\n    newwarning,\r\n    setnewwarning,\r\n    newinput,\r\n    setnewinput}) => {\r\n    return (\r\n        <>\r\n        <Notification\r\n          bg=\"danger700\"\r\n          isOpen={newalert}\r\n          onClose={()=> {setnewalert(!newalert)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"CloseSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          All fields (other than medical excuses) must be filled.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"success700\"\r\n          isOpen={newupdate}\r\n          onClose={() => setnewupdate(!newupdate)}\r\n          prefix={\r\n            <Icon\r\n              name=\"Success\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          {newName.toUpperCase()} has been updated.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"warning700\"\r\n          isOpen={newwarning}\r\n          onClose={() => setnewwarning(!newwarning)}\r\n          prefix={\r\n            <Icon\r\n            name=\"AlertSolid\"\r\n            color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          {newName.toUpperCase()} has already been removed from the server.\r\n        </Notification>\r\n        <Notification\r\n          bg=\"success700\"\r\n          isOpen={newinput}\r\n          onClose={() => setnewinput(!newinput)}\r\n          prefix={\r\n            <Icon\r\n              name=\"Success\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Name added.\r\n        </Notification>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Notifications from \"./notifications\";\r\n\r\n\r\nconst Form = ({setNewMessage,persons,setPersons}) => {\r\n\r\nconst [ newName, setNewName ] = useState('')\r\nconst [ newStatus, setnewStatus ] = useState('')\r\nconst [ newReason, setnewReason ] = useState('')\r\nconst [ newGroup, setnewGroup ] = useState('')\r\nconst [ newexcuse, setnewExcuse ] = useState('')\r\nconst [ newRole, setnewRole ] = useState('')\r\nconst [newalert, setnewalert] = useState(false)\r\nconst [newupdate, setnewupdate] = useState(false)\r\nconst [newwarning, setnewwarning] = useState(false)\r\nconst [newinput, setnewinput] = useState(false)\r\nconst addName = (event) => {\r\n  event.preventDefault()\r\n  console.log(newexcuse)\r\n\r\n  const newPerson = {\r\n    name: newName.trim().toUpperCase(),\r\n    status: newStatus.toLowerCase(),\r\n    reason: (newReason) ? newReason : 'nil',\r\n    group: newGroup.toUpperCase(),\r\n    excuse: (newexcuse) ? newexcuse : 'nil',\r\n    role: newRole\r\n  }\r\n\r\n  const nameCheck = persons.filter(person=> \r\n    person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n    )\r\n  \r\n  console.log(nameCheck)\r\n\r\n  if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n    setnewalert(!newalert)\r\n  } else if (nameCheck.length>0) {\r\n    if (window.confirm(`${newName.toUpperCase()} is already added to nominal roll. Would you like to update the status?`)) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n                setnewupdate(!newupdate)\r\n      })\r\n          .catch(error=> {\r\n            setnewwarning(!newwarning)\r\n\r\n          })\r\n      )}\r\n    } else {\r\n      phoneservice\r\n        .addNew(newPerson)\r\n        .then(updatedList => {\r\n            setPersons(persons.concat(updatedList))\r\n            setnewinput(!newinput)\r\n          })\r\n        .catch(error=> {\r\n          setnewwarning(!newwarning)\r\n        })\r\n      }\r\n      setnewStatus('')\r\n      setNewName('')\r\n      setnewReason('')\r\n      setnewGroup('')\r\n      setnewExcuse('')\r\n      setnewRole('')\r\n\r\n    }\r\n\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Add\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Notifications newName={newName} \r\n                          setnewalert ={setnewalert}\r\n                          newalert = {newalert}\r\n                          newupdate ={newupdate}\r\n                          setnewupdate ={setnewupdate}\r\n                          newwarning={newwarning}\r\n                          setnewwarning={setnewwarning}\r\n                          newinput={newinput}\r\n                          setnewinput={setnewinput}/>\r\n            <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"success700\"\r\n              hoverBg=\"success600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"Add\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n      bg=\"success300\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n        textColor=\"black\"\r\n        >\r\n        <p>NAME: {person.name}</p>\r\n        <p>STATUS: {person.status.toUpperCase()}</p>\r\n        <p>REASON: {person.reason.toUpperCase()}</p>\r\n        <p>GROUP: {person.group.toUpperCase()}</p>\r\n        <p>EXCUSES: {person.excuse.toUpperCase()}</p>\r\n        <p>ROLE: {person.role.toUpperCase()}</p>\r\n\r\n\r\n\r\n\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"success700\"\r\n          hoverBg=\"success600\"\r\n          textColor=\"black\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n          \r\n            bg=\"success700\"\r\n            hoverBg=\"success600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n          <Icon name=\"Info\" size=\"20px\" />\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text} from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"danger700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"danger700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n\r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"danger700\"\r\n            hoverBg=\"danger600\"\r\n            m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            <Icon name=\"Delete\" size=\"20px\" />\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleDropDown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"Coy HQ\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='specs' >\r\n            {\"Specialist\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='opr'>\r\n            {\"Operator\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='admin'>\r\n            {\"Administrator\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n      <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Role Updated\r\n        </Notification>\r\n        <Dropdown  \r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Role\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default RoleDropDown;","import React, {useState} from \"react\";\r\nimport { Icon,Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst Groupdropdown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateGroup = (event) => {\r\n      setshowModal(!showModal)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: person.status,\r\n              reason: person.reason,\r\n              group: event.target.getAttribute(\"value\"),\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateGroup}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            {\"HQ 🏢\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='blueteam' >\r\n            {\"Blue Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='redteam'>\r\n            {\"Red Team\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n        <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Group Updated\r\n        </Notification>\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info100\"\r\n        focusBg=\"info200\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Group\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default Groupdropdown;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor, Notification} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\nconst StatusDropDown = ({person,persons,setPersons}) => {\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n    const HandleUpdateStatus = (event) => {\r\n      setshowModal(!showModal)\r\n\r\n      let returnValue = event.target.getAttribute(\"value\")\r\n\r\n      let newReason = ''\r\n      if (returnValue === 'mc') {\r\n        newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n      } else if (returnValue === 'ma') {\r\n        newReason = prompt('Details',`MA AT`)\r\n      } else if (returnValue === 'off') {\r\n        newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n      } else if (returnValue === 'leave') {\r\n        newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n      } else if (returnValue === 'attached') {\r\n        newReason = prompt('Details',`ATTACHED OUT TO `)\r\n      } else if (returnValue === 'others') {\r\n        newReason = prompt('Details',``)\r\n      } else if (returnValue === 'oncourse') {\r\n        newReason = prompt('Details',``)\r\n      }\r\n       else {\r\n        newReason = ''\r\n      }\r\n  \r\n      if (newReason) {\r\n        newReason = newReason.toUpperCase()\r\n      } else {\r\n        newReason = 'nil'\r\n      }\r\n  \r\n      console.log(newReason)\r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n              name: person.name,\r\n              status: event.target.getAttribute(\"value\"),\r\n              reason: newReason,\r\n              group: person.group,\r\n              excuse: person.excuse,\r\n              role: person.role\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n                      setnewinfo(!newinfo)\r\n\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='present' >\r\n            {\"Present ✅\"}  \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='mc' >\r\n            {\"MC 😷\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ma'>\r\n            {\"MA 👨🏻‍⚕️\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='off'>\r\n            {\"Off 🚫\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='oncourse'>\r\n            {\"On Course 👨🏻‍🎓\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='leave'>\r\n            {\"Leave 🚪\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='attached'>\r\n            {\"Attached Out 🅰\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='others'>\r\n            {\"Others 🗒\"}\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='stayout'>\r\n            {\"Stay Out 🏠\"}\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n      <Div>\r\n      <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Status Updated\r\n        </Notification>\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        m={{ r: \"0.5rem\"}}\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          Status\r\n        </Dropdown>\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default StatusDropDown\r\n;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Input, Notification } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person, setnewExcuse,newexcuse}) => {\r\n  \r\n  const handleExcuseChange = (event) => {\r\n    console.log(`Excuse: ${event.target.value}`)\r\n    setnewExcuse(event.target.value)\r\n    }\r\n\r\n    console.log(person.excuse)\r\n  \r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" maxW=\"32rem\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n      <Icon\r\n          name=\"History\"\r\n          color=\"black\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Input\r\n        d='flex'\r\n        justify=\"flex-end\"\r\n        m={{ r: \"1rem\" }}\r\n    rounded=\"xl\"\r\n    value={newexcuse}\r\n    defaultvalue={person.excuse}\r\n    onChange={handleExcuseChange}\r\n    placeholder=\"Medical Excuses\"\r\n    p={{ x: \"2.5rem\" }}\r\n    \r\n    />\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Update\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst UpdateexcuseModal = ({setPersons, persons, person}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n  const [newexcuse, setnewExcuse ] = useState('')\r\n  const [newinfo, setnewinfo] = useState(false)\r\n\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n      console.log((newexcuse.toUpperCase()))\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: (newexcuse.trim()) ? newexcuse.trim().toUpperCase() : 'nil',\r\n        role: person.role   \r\n    }  \r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n      setshowModal(!showModal)\r\n      phoneservice\r\n      .update(nameCheck[0].id, newPerson)\r\n      .then(updatedList=> {setPersons(persons.map(person=>\r\n          person.id !== nameCheck[0].id\r\n            ? person\r\n            : updatedList))\r\n            setnewinfo(!newinfo)\r\n\r\n          })\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    return (\r\n        <Div d='flex'>\r\n          <Notification\r\n          bg=\"info700\"\r\n          isOpen={newinfo}\r\n          onClose={()=> {setnewinfo(!newinfo)}}\r\n          prefix={\r\n            <Icon\r\n              name=\"InfoSolid\"\r\n              color=\"white\"\r\n              size=\"18px\"\r\n              m={{ r: \"0.5rem\" }}\r\n            />\r\n          }\r\n        >\r\n          Medical Excuses Updated\r\n        </Notification>\r\n          <Button \r\n          bg=\"white\"\r\n          focusBg=\"info300\"\r\n          borderColor=\"info600\"\r\n          focusBorderColor=\"info800\"\r\n          textColor=\"info800\"\r\n          textWeight=\"500\"\r\n          m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n\r\n          aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleclick}>\r\n        Excuses\r\n      </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n            setnewExcuse={setnewExcuse}\r\n            newexcuse={newexcuse}\r\n          />\r\n        </Div>\r\n      );\r\n}\r\n\r\nexport default UpdateexcuseModal;","import React, {useState} from 'react'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleDropDown from './roleDropDown'\r\nimport Groupdropdown from './groupDropDown'\r\nimport StatusDropDown from './statusDropDown'\r\nimport { Div, Button, Icon } from 'atomize'\r\nimport UpdateexcuseModal from './updateexcusemodal'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }}onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button bg=\"info700\" hoverBg=\"info600\" m={{ r: \"0.5rem\",y: \"0.5rem\" }} onClick={HandleShow}><Icon name=\"Rename\" size=\"20px\" /></Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <StatusDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <Groupdropdown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleDropDown options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n          <UpdateexcuseModal id={id} setPersons={setPersons} persons={persons} person={person} />\r\n          </Div>\r\n\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React from 'react'\r\nimport { Input,Icon, Div } from 'atomize'\r\n\r\nconst Filter = ({newFilter, handleNamefilter}) => {\r\n    return (\r\n      \r\n      <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n        <Input\r\n      \r\n    rounded=\"xl\"\r\n    value={newFilter}\r\n    bg=\"success00\"\r\n\r\n    onChange={handleNamefilter}\r\n    placeholder=\"Filter by name\"\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n    onClick={()=> window.open('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\r\n        />\r\n      }\r\n    />\r\n    </Div>\r\n    )\r\n  }\r\n\r\n  export default Filter\r\n  //not relevant\r\n\r\n","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\nimport Filter from './filter';\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n  const [ newFilter, setFilter ] = useState('')\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  const handleNamefilter = (event) => {\r\n    console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n    }\r\n\r\n  const personnelToShow = (!newFilter.trim())\r\n  ? persons\r\n  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Edit\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"black\"\r\n            rounded=\"xl\"\r\n              bg=\"info700\"\r\n              hoverBg=\"info600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"EditSolid\"\r\n                size=\"16px\"\r\n                color=\"black\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Filter newFilter={newFilter} handleNamefilter={handleNamefilter}/>\r\n          <ol>\r\n            {personnelToShow.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </>\r\n      )\r\n  }\r\n  \r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDO = ({persons,setnewcdo}) => {\r\n    \r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n\r\n    const handlecdochange = (event) => {\r\n        console.log(`CDO: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcdo(event.target.getAttribute(\"value\"))\r\n      }\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    const HQList = persons.filter(person=> (String(person.role)).toLowerCase()==='hq') \r\n    console.log(HQList)\r\n    const menuList = (\r\n        <Div  p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdochange}>\r\n          <Anchor value=\"LTA SAM LAM\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            LTA SAM LAM\r\n          </Anchor>\r\n          <Anchor value=\"2LT MARY JANE\" d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            2LT MARY JANE\r\n          </Anchor>\r\n      </Div>\r\n    );\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <Dropdown \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDO\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDO\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCDS = ({persons,setnewcds}) => {\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const handlecdschange = (event) => {\r\n        console.log(`CDS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcds(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const CDSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(CDSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecdschange}>\r\n        {CDSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n    \r\n    return (\r\n        <Dropdown\r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          COS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCDS\r\n;","import React, {useState} from \"react\";\r\nimport { Icon, Div, Dropdown, Anchor} from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst NewCOS = ({persons,setnewcos}) => {\r\n\r\n  const [showModal, setshowModal] = useState(false)\r\n\r\n  const Handleclick = () => {\r\n      setshowModal(!showModal)\r\n  }\r\n  \r\n\r\n    const handlecoschange = (event) => {\r\n        console.log(`COS: ${event.target.getAttribute(\"value\")}`)\r\n        setnewcos(event.target.getAttribute(\"value\"))\r\n      }\r\n    \r\n    const COSList = persons.filter(person=> (String(person.role)).toLowerCase()==='specs') \r\n    console.log(COSList)\r\n    const menuList = (\r\n        <Div p={{ x: \"1rem\", y: \"0.5rem\" }} onClick ={handlecoschange}>\r\n        {COSList.map(person => (\r\n          <Anchor value={person.name} d=\"block\" p={{ y: \"0.25rem\" }} onClick ={Handleclick}>\r\n            {person.name}\r\n          </Anchor>\r\n        ))}\r\n      </Div>\r\n    );\r\n\r\n   \r\n    return (\r\n        <Dropdown\r\n        \r\n        rounded=\"xl\" \r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n          bg=\"info200\"\r\n        focusBg=\"info300\"\r\n        borderColor=\"info600\"\r\n        focusBorderColor=\"info800\"\r\n        m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n        textColor=\"info800\"\r\n        textWeight=\"500\"\r\n        openSuffix={<Icon name=\"Up\" color=\"info700\" size=\"16px\" />}\r\n        closeSuffix={<Icon name=\"Down\" color=\"info700\" size=\"16px\" />}\r\n        >\r\n          CDS\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default NewCOS\r\n;","import React, {useState} from \"react\";\r\nimport {Button, Icon, Div, Input } from \"atomize\";\r\nimport NewCDO from \"./newcdo\";\r\nimport NewCDS from \"./newcds\";\r\nimport NewCOS from \"./newcos\";\r\n\r\n\r\nconst Settings = ({\r\n    setnewcdo,\r\n    setnewcds,\r\n    setnewcos,\r\n    setnewas,\r\n    newauthor,\r\n    setnewauthor,\r\n    persons\r\n}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  const handleauthorchange = (event) => {\r\n    console.log(`Done by: ${event.target.value}`)\r\n    setnewauthor(event.target.value)\r\n  }\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n                <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon name=\"SettingsSolid\" size=\"20px\" color=\"white\"\r\n                m={{ l: \"1rem\" }}/>\r\n                } \r\n              >\r\n                Settings\r\n            </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <>\r\n      <Div d=\"flex\" justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n            <Button\r\n            textColor=\"white\"\r\n            rounded=\"xl\"\r\n              bg=\"black700\"\r\n              hoverBg=\"black600\"\r\n              m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              suffix={\r\n                <Icon\r\n                name=\"SettingsSolid\"\r\n                size=\"16px\"\r\n                color=\"white\"\r\n                m={{ l: \"1rem\" }}\r\n                \r\n              />} \r\n              >\r\n                Hide\r\n            </Button>\r\n    </Div>\r\n    <Div d='flex' justify={{ xs: \"space-around\", lg: \"center\" }}>\r\n          <Input\r\n    m={{ r: \"0.5rem\",y: \"0.5rem\" }}\r\n    rounded=\"xl\"\r\n    value={newauthor}\r\n    onChange={handleauthorchange}\r\n    placeholder=\"Done By: (Rank/Name)\"\r\n    p={{ x: \"2.5rem\" }}\r\n    prefix={\r\n    <Icon\r\n    name=\"UserSolid\"\r\n    color=\"black\"\r\n    size=\"16px\"\r\n    cursor=\"pointer\"\r\n    pos=\"absolute\"\r\n    top=\"50%\"\r\n    left=\"0.75rem\"\r\n    transform=\"translateY(-50%)\"\r\n        />\r\n      }\r\n      />\r\n      </Div>\r\n          <NewCDO  persons={persons} setnewcdo={setnewcdo}/>\r\n          <NewCDS persons={persons} setnewcds={setnewcds}/>\r\n          <NewCOS persons={persons} setnewcos={setnewcos}/>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} to All, this is the strength for our team as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const Specrolelist = persons.filter(person=> (person.role==='specs'))\r\n  let Speccurrent = 0\r\n  Specrolelist.map(person=> (person.status==='present') ? (Speccurrent = Speccurrent+1) : Speccurrent)\r\n  const Spectotal = Specrolelist.length\r\n\r\n  const Oprrolelist = persons.filter(person=> (person.role==='opr'))\r\n  let Oprcurrent = 0\r\n  Oprrolelist.map(person=> (person.status==='present') ? (Oprcurrent = Oprcurrent+1) : Oprcurrent)\r\n  const Oprtotal = Oprrolelist.length\r\n\r\n  const Adminrolelist = persons.filter(person=> (person.role==='admin'))\r\n  let Admincurrent = 0\r\n  Adminrolelist.map(person=> (person.status==='present') ? (Admincurrent = Admincurrent+1) : Admincurrent)\r\n  const Admintotal = Adminrolelist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -Specialists: {Speccurrent}/{Spectotal} </p>\r\n          <p style={style}> -Operators: {Oprcurrent}/{Oprtotal} </p>\r\n          <p style={style}> -Administrators: {Admincurrent}/{Admintotal} </p>\r\n\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\nimport {Text} from \"atomize\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                }) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <Text style={style}>CDO: {newcdo.toUpperCase()}</Text>\r\n        <Text style={style}>CDS: {newcds.toUpperCase()}</Text>\r\n        <Text style={style}>COS: {newcos.toUpperCase()}</Text>\r\n        <br/>\r\n        <Text style={style}>Total Strength: {totalstrength}</Text>\r\n        <Text style={style}>Present Strength: {currentstrength}</Text> \r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        <Text style={style}>PRESENT IN CAMP: {currentstrength}</Text>\r\n        <br/>\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Blueteam = ({persons}) => {\r\n    \r\n    const BlueteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='blueteam') \r\n    console.log(`List of Blue Team members: ${JSON.stringify(BlueteamList)}`)\r\n    let currentstrength = 0\r\n    BlueteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = BlueteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>BLUE TEAM: {currentstrength}/{totalstrength}</p>\r\n            {BlueteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Blueteam ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Redteam = ({persons}) => {\r\n    \r\n    const RedteamList = persons.filter(person=> (String(person.group)).toLowerCase()==='redteam') \r\n    console.log(`List of Red Team members: ${JSON.stringify(RedteamList)}`)\r\n    let currentstrength = 0\r\n    RedteamList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = RedteamList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>RED TEAM: {currentstrength}/{totalstrength}</p>\r\n            {RedteamList.map((person, index)=> \r\n              <Text style={style} key={person.name}>                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Redteam","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>PERSONNEL WITH MEDICAL EXCUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\nimport { Text } from \"atomize\"\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Others = ({persons}) => {\r\n    \r\n    const OthersList = persons.filter(person=> (String(person.group)).toLowerCase()==='others') \r\n    console.log(`List of other members: ${JSON.stringify(OthersList)}`)\r\n    let currentstrength = 0\r\n    OthersList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = OthersList.length\r\n    // eslint-disable-next-line eqeqeq\r\n    if (totalstrength!='0') {\r\n      return (\r\n        <div>\r\n          <p style={style}>OTHERS: {currentstrength}/{totalstrength}</p>\r\n            {OthersList.map((person, index)=> \r\n              <Text style={style} key={person.name}>\r\n                {index+1} .  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </Text>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    }\r\n\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Others ","import React from 'react'\r\nimport HQ from './hq' \r\nimport Blueteam from './Blueteam';\r\nimport Redteam from './Redteam'\r\nimport Excuses from './Excuses'\r\nimport Signature from \"./signature\"\r\nimport Others from './Others';\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <Blueteam persons={persons}/>\r\n    <br/>\r\n    <Redteam persons={persons}/>\r\n    <br/>\r\n    <Others persons={persons} />\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/> \r\n    \r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Message from './components/message'\r\nimport Form from './components/InsertNew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/contents/paradestate'\r\nimport { useUser, UserButton } from '@clerk/clerk-react'\r\nimport { Div, Text } from 'atomize'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  const { firstName } = useUser();\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n  return (\r\n    <Div>\r\n      <Div d='flex' align=\"center\"p=\"1rem\">\r\n      <UserButton />\r\n      <Text >Hello, {firstName}!</Text> \r\n      </Div>\r\n      <Message message={newMessage}/>\r\n      <Form setNewMessage={setNewMessage} persons={persons} setPersons={setPersons} />\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <Settings newcdo={newcdo}\r\n                setnewcdo={setnewcdo}\r\n                newcds={newcds}\r\n                setnewcds={setnewcds}\r\n                newcos={newcos}\r\n                setnewcos={setnewcos}\r\n                newauthor = {newauthor}\r\n                setnewauthor ={setnewauthor}\r\n                persons={persons}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </Div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React from 'react';\r\nimport Appcontent from './Appcontent'\r\nimport {\r\n    ClerkProvider,\r\n    SignedIn,\r\n    SignedOut,\r\n    RedirectToSignIn,\r\n  } from \"@clerk/clerk-react\";\r\n  import { useHistory } from \"react-router-dom\";\r\n\r\nconst frontendApi = process.env.REACT_APP_CLERK_FRONTEND_API;\r\n\r\nconst App = () => {\r\n\r\n    const {push} = useHistory();\r\n\r\n        return (\r\n            <ClerkProvider frontendApi={frontendApi} navigate={(to) => push(to)}>\r\n            <SignedIn>\r\n              <Appcontent />\r\n            </SignedIn>\r\n            <SignedOut>\r\n              <RedirectToSignIn />\r\n            </SignedOut>\r\n          </ClerkProvider>\r\n        )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\nimport { ThemeProvider, StyleReset} from \"atomize\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nconst theme = {\r\n  colors: {\r\n    brand100: \"#F9F8FC\",\r\n    brand200: \"#F3F1FA\",\r\n    brand300: \"#E9E6F6\",\r\n    brand400: \"#D2CCEC\",\r\n    brand500: \"#BCB3E2\",\r\n    brand600: \"#9C8FD6\",\r\n    brand700: \"#6F5CC3\",\r\n    brand800: \"#553EB5\",\r\n    brand900: \"#382683\",\r\n  },grid: {\r\n    containerWidth: {\r\n        xs: \"540px\",\r\n        sm: \"720px\",\r\n        md: \"960px\",\r\n        lg: \"1156px\",\r\n        xl: \"1156px\"\r\n    }, gutterWidth: \"12px\",\r\n  }, \r\n};\r\n\r\nconst debug =\r\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\r\n\r\n// 1. Create a client engine instance\r\nconst engine = new Styletron();\r\n\r\n// 2. Provide the engine to the app\r\n// debug engine needs inlined source maps\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\r\n    <ThemeProvider theme={theme}>\r\n    <StyleReset />\r\n    <App />\r\n    </ThemeProvider>\r\n  </StyletronProvider>\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}