{"version":3,"sources":["Loginpage.js","components/message.js","components/reusable/newdate.js","components/insertnew/formcontent.js","components/insertnew/form.js","services/phoneservice.js","components/personnellist/updateStatus.js","components/personnellist/updateGroup.js","components/personnellist/updateRole.js","components/personnellist/updateExcuse.js","components/personnellist/detailmodal.js","components/personnellist/deletemodal.js","components/personnellist/rolemodal.js","components/personnellist/updateButtons.js","components/reusable/emoji.js","components/reason.js","components/personnellist/personnelList.js","components/settings.js","components/title/greeting.js","components/summary/absentees.js","components/summary/roles.js","components/summary/summary.js","components/contents/hq.js","components/contents/CCP.js","components/contents/CSP.js","components/contents/Excuses.js","components/contents/signature.js","components/paradestate.js","Appcontent.js","App.js","index.js"],"names":["Loginpage","access","setnewaccess","useState","pass","setnewpass","class","align","type","placeholder","onChange","event","target","value","Message","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Today","Date","dd","getDate","mm","getMonth","yy","getFullYear","toString","substr","Newdate","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Formcontent","addName","newName","setNewName","newStatus","setnewStatus","newGroup","setnewGroup","newexcuse","setnewExcuse","newRole","setnewRole","setnewReason","onSubmit","TextField","id","label","multiline","maxRows","console","log","FormControl","className","InputLabel","Select","labelId","detailresponse","prompt","toUpperCase","MenuItem","Button","variant","Form","show","setShow","HandleShow","d","prefix","name","size","m","r","bg","hoverBg","rounded","p","l","shadow","hoverShadow","onClick","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","UpdateStatus","options","person","persons","setPersons","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","open","Boolean","returnValue","getAttribute","newReason","status","reason","group","excuse","role","nameCheck","filter","toLowerCase","includes","phoneservice","updatedList","map","onClose","UpdateGroup","UpdateRole","UpdateExcuse","ModalSize","isOpen","maxW","pos","top","right","cursor","t","b","JSON","stringify","justify","textColor","DetailModal","showModal","setshowModal","Handleclick","AlignCenterModal","textSize","DeleteModal","RoleModal","menuList","x","y","w","menu","Updatebuttons","Emoji","symbol","Emojidisplay","currentStatus","Reason","Personnellist","suffix","Settings","newcdo","handlecdochange","newcds","handlecdschange","newcos","handlecoschange","newas","handleaschange","newauthor","handleauthorchange","hours","getHours","minutes","getMinutes","CurrentTime","greeting","Greeting","Absentees","mc","ma","off","oncourse","leave","attached","others","stayout","totalAbsentee","Roles","HQrolelist","HQcurrent","HQtotal","length","SevenSpecrolelist","Sevenspeccurrent","SevenSpectotal","IC2rolelist","IC2current","IC2total","ISrolelist","IScurrent","IStotal","Summary","currentstrength","totalstrength","HQ","HQList","String","index","CCP","CCPList","CSP","CSPList","Excuse","Excuses","ExcuseList","Signature","ParadeState","Appcontent","setnewcdo","setnewcds","setnewcos","setnewas","setnewauthor","newMessage","setNewMessage","useEffect","allPersons","preventDefault","trim","window","confirm","setTimeout","catch","error","concat","alert","App","engine","Styletron","ReactDOM","render","debug","debugAfterHydration","colors","brand100","brand200","brand300","brand400","brand500","brand600","brand700","brand800","brand900","document","getElementById"],"mappings":"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","file":"static/js/main.e850a7d7.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport './loginpage.css';\r\n\r\nconst Loginpage = ({access,setnewaccess}) => {\r\n    const [pass, setnewpass] = useState('')\r\n\r\n\r\n    const Handlelogin = (event) => {\r\n        setnewpass(event.target.value)\r\n    }\r\n\r\n    if (pass==='sigparadestate') {\r\n        setnewaccess(!access)\r\n    } \r\n\r\n    return (\r\n        <>\r\n        <div class=\"main\">\r\n    <p class=\"sign\" align=\"center\">Sign in</p>\r\n    <form class=\"form1\" />\r\n          <input class=\"pass\" type=\"password\" align=\"center\" placeholder=\"Password\" onChange={Handlelogin}/>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginpage","import React from 'react'\r\n\r\n\r\n\r\nconst Message = ({ message }) => {\r\n    const messagestyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n    \r\n    if (message === null) {\r\n    return null\r\n  }\r\n    return (\r\n        <div style={messagestyle}>\r\n        {message}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Message\r\n\r\n//not relevant","let Today = new Date();\r\nlet dd = Today.getDate();\r\nlet mm = Today.getMonth()+1; \r\nconst yy = Today.getFullYear().toString().substr(-2);\r\n\r\nif(dd<10) dd=`0${dd}`\r\nif(mm<10) mm=`0${mm}`\r\n\r\nconst Newdate = `${dd}${mm}${yy}`\r\n\r\nexport default Newdate","import React from 'react'\r\nimport { FormControl, Select, MenuItem, InputLabel, makeStyles, TextField, Button } from '@material-ui/core';\r\nimport Newdate from '../reusable/newdate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 177,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Formcontent = ({addName,\r\n               newName,\r\n               setNewName,\r\n               newStatus,\r\n               setnewStatus,\r\n               newGroup,\r\n               setnewGroup,\r\n               newexcuse,\r\n               setnewExcuse,\r\n               newRole,\r\n               setnewRole,\r\n               setnewReason\r\n              }) => {\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(`Name: ${event.target.value}`)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleStatusChange = (event) => {\r\n  console.log(`Status: ${event.target.value}`)\r\n    setnewStatus(event.target.value)\r\n\r\n    let detailresponse = ''\r\n    if (event.target.value === 'mc') {\r\n      detailresponse = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n    } else if (event.target.value === 'ma') {\r\n      detailresponse = prompt('Details',`MA AT`)\r\n    } else if (event.target.value === 'off') {\r\n      detailresponse = prompt('Details',`OFF ON ${Newdate}`)\r\n    } else if (event.target.value === 'leave') {\r\n      detailresponse = prompt('Details',`LEAVE ON ${Newdate}`)\r\n    } else if (event.target.value === 'attached') {\r\n      detailresponse = prompt('Details',`ATTACHED OUT TO`)\r\n    } else if (event.target.value === 'others') {\r\n      detailresponse = prompt('Details',``)\r\n    } else if (event.target.value === 'oncourse') {\r\n      detailresponse = prompt('Details',``)\r\n    }\r\n    else {\r\n      detailresponse = ''\r\n    }\r\n    console.log(`Reason: ${detailresponse}`)\r\n    if (detailresponse) {\r\n      setnewReason(detailresponse.toUpperCase())\r\n    }\r\n    }\r\n\r\n\r\nconst handleGroupChange = (event) => {\r\n  console.log(`Group: ${event.target.value}`)\r\n  setnewGroup(event.target.value)\r\n}\r\n\r\nconst handleExcuseChange = (event) => {\r\n  console.log(`Excuse: ${event.target.value}`)\r\n  setnewExcuse(event.target.value)\r\n}\r\n\r\nconst handleRoleChange = (event) => {\r\n  console.log(`Role: ${event.target.value}`)\r\n  setnewRole(event.target.value)\r\n}\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={addName}>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Rank/Name\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newName}\r\n              onChange={handleNameChange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <FormControl className={useStyles().formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Current Status</InputLabel>\r\n              <Select\r\n              labelId=\"status\"\r\n              id=\"status\"\r\n              value ={newStatus}\r\n              onChange = {handleStatusChange}\r\n              >\r\n              <MenuItem value='present'>Present ✅</MenuItem>\r\n              <MenuItem value='mc'>MC 😷</MenuItem>\r\n              <MenuItem value='ma'>MA 👨🏻‍⚕️</MenuItem>\r\n              <MenuItem value='off'>Off 🚫</MenuItem>\r\n              <MenuItem value='oncourse'>On Course 👨🏻‍🎓</MenuItem>\r\n              <MenuItem value='leave'>Leave 🚪</MenuItem>\r\n              <MenuItem value='attached'>Attached Out 🅰</MenuItem>\r\n              <MenuItem value='others'>Others 🗒</MenuItem>\r\n              <MenuItem value='stayout'>Stay Out 🏠</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            <FormControl className={useStyles().formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Group</InputLabel>\r\n              <Select\r\n              labelId=\"group\"\r\n              id=\"group\"\r\n              value ={newGroup}\r\n              onChange = {handleGroupChange}\r\n              >\r\n              <MenuItem value='HQ'>HQ</MenuItem>\r\n              <MenuItem value='CCP'>FG1 - CCP</MenuItem>\r\n              <MenuItem value='CSP'>FG2 - CSP</MenuItem>\r\n              <MenuItem value='OTHERS'>Others</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n            <FormControl className={useStyles().formControl}>\r\n              <InputLabel id=\"demo-simple-select-label\">Role</InputLabel>\r\n              <Select\r\n              labelId=\"role\"\r\n              id=\"role\"\r\n              value ={newRole}\r\n              onChange = {handleRoleChange}\r\n              >\r\n              <MenuItem value='hq'>Coy HQ</MenuItem>\r\n              <MenuItem value='sevenspec'>7th Mono Spec</MenuItem>\r\n              <MenuItem value='ic2'>IC2 Opr</MenuItem>\r\n              <MenuItem value='is'>IS Opr</MenuItem>\r\n\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div>\r\n          <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Medical Excuses\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newexcuse}\r\n              onChange={handleExcuseChange}\r\n              />\r\n\r\n          </div>\r\n\r\n          <div>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add</Button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Formcontent","import React, {useState} from \"react\";\r\nimport Formcontent from \"./formcontent\";\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\n\r\nconst Form = ({addName,\r\n    newName,\r\n    setNewName,\r\n    newStatus,\r\n    setnewStatus,\r\n    newGroup,\r\n    setnewGroup,\r\n    newexcuse,\r\n    setnewExcuse,\r\n    newRole,\r\n    setnewRole,\r\n    setnewReason,\r\n    }) => {\r\n    \r\n    const [show, setShow] = useState(false)\r\n\r\n    const HandleShow = () => setShow(!show)\r\n\r\n    if (show===false) {\r\n        return (\r\n          <Div d=\"flex\">\r\n            <Button\r\n            prefix={\r\n            <Icon\r\n              name=\"EyeSolid\"\r\n              size=\"16px\"\r\n              color=\"white\"\r\n              m={{ r: \"0.5rem\" }}\r\n              />}\r\n              bg=\"warning700\"\r\n              hoverBg=\"warning800\"\r\n              rounded=\"circle\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              >\r\n                Insert New\r\n            </Button>\r\n          </Div>\r\n        )} else {\r\n          return (\r\n            <>\r\n            <Div d=\"flex\">\r\n            <Button\r\n            prefix={\r\n            <Icon\r\n              name=\"EyeSolid\"\r\n              size=\"16px\"\r\n              color=\"white\"\r\n              m={{ r: \"0.5rem\" }}\r\n              />}\r\n              bg=\"warning700\"\r\n              hoverBg=\"warning800\"\r\n              rounded=\"circle\"\r\n              p={{ r: \"1.5rem\", l: \"1rem\" }}\r\n              shadow=\"3\"\r\n              hoverShadow=\"4\"\r\n              onClick={HandleShow}\r\n              >\r\n                Hide\r\n            </Button>\r\n            </Div>\r\n            <>\r\n              <br/>\r\n              <Formcontent \r\n              addName={addName}\r\n              newName={newName}\r\n              setNewName={setNewName}\r\n              newStatus={newStatus}\r\n              setnewStatus={setnewStatus}\r\n              newGroup = {newGroup} \r\n              setnewGroup = {setnewGroup}\r\n              newexcuse ={newexcuse}\r\n              setnewExcuse = {setnewExcuse}\r\n              newRole = {newRole}\r\n              setnewRole = {setnewRole}\r\n              setnewReason={setnewReason}\r\n              />\r\n              <br/>  \r\n            </>\r\n            </>\r\n          )}\r\n  }\r\n\r\nexport default Form","import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id,newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response=>response.data)\r\n  \r\n}\r\n\r\nexport default {getAll, addNew, removePerson, update}","import React, {useState} from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\"\r\nimport Newdate from \"../reusable/newdate\"\r\n\r\nconst UpdateStatus = ({options,person,persons,setPersons}) => {\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n    \r\n  const HandleUpdateStatus = (event,value) => {  \r\n    setAnchorEl(null);\r\n\r\n    let returnValue = event.target.getAttribute(\"value\")\r\n\r\n    let newReason = ''\r\n    if (returnValue === 'mc') {\r\n      newReason = prompt('Details',`MC FROM ${Newdate} TO ${Newdate}`)\r\n    } else if (returnValue === 'ma') {\r\n      newReason = prompt('Details',`MA AT`)\r\n    } else if (returnValue === 'off') {\r\n      newReason = prompt('Details',`OFF ON ${Newdate}`)\r\n    } else if (returnValue === 'leave') {\r\n      newReason = prompt('Details',`LEAVE ON ${Newdate}`)\r\n    } else if (returnValue === 'attached') {\r\n      newReason = prompt('Details',`ATTACHED OUT TO `)\r\n    } else if (returnValue === 'others') {\r\n      newReason = prompt('Details',``)\r\n    } else if (returnValue === 'oncourse') {\r\n      newReason = prompt('Details',``)\r\n    }\r\n     else {\r\n      newReason = ''\r\n    }\r\n\r\n    if (newReason) {\r\n      newReason = newReason.toUpperCase()\r\n    }\r\n\r\n    console.log(newReason)\r\n\r\n    console.log(value)\r\n        const newPerson = {\r\n            name: person.name,\r\n            status: event.target.getAttribute(\"value\"),\r\n            reason: newReason,\r\n            group: person.group,\r\n            excuse: person.excuse,\r\n            role: person.role\r\n        }\r\n\r\n  const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n    \r\n    if (event.target.getAttribute(\"value\")) {\r\n\r\n      \r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))\r\n    }\r\n    }\r\n\r\n\r\n    if (options) {\r\n      return (\r\n        <div >\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Status\r\n      </Button>\r\n      <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClick={HandleUpdateStatus}\r\n          onClose={handleClose}>\r\n            <MenuItem value='present' >Present ✅</MenuItem>\r\n            <MenuItem value='mc'>MC 😷</MenuItem>\r\n            <MenuItem value='ma'>MA 👨🏻‍⚕️</MenuItem>\r\n            <MenuItem value='off'>Off 🚫</MenuItem>\r\n            <MenuItem value='oncourse'>On Course 👨🏻‍🎓</MenuItem>\r\n            <MenuItem value='leave'>Leave 🚪</MenuItem>\r\n            <MenuItem value='attached'>Attached Out 🅰</MenuItem>\r\n            <MenuItem value='others'>Others 🗒</MenuItem>\r\n            <MenuItem value='stayout'>Stay Out 🏠</MenuItem>\r\n            </Menu>\r\n\r\n        </div> \r\n      )} else\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    } \r\n\r\n    export default UpdateStatus","import React, {useState} from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\"\r\n\r\n\r\nconst UpdateGroup = ({options,person,persons,setPersons}) => {\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n    \r\n  const HandleUpdateGroup = (event,value) => {  \r\n    setAnchorEl(null);\r\n\r\n    console.log(value)\r\n        const newPerson = {\r\n            name: person.name,\r\n            status: person.status,\r\n            reason: person.reason,\r\n            group: event.target.getAttribute(\"value\"),\r\n            excuse: person.excuse,\r\n            role: person.role\r\n        }\r\n    \r\n\r\n  const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (event.target.getAttribute(\"value\")) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))  \r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\n    if (options) {\r\n      return (\r\n        <div >\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Group\r\n      </Button>\r\n      <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClick={HandleUpdateGroup}\r\n          onClose={handleClose}>\r\n            <MenuItem value='hq'>HQ</MenuItem>\r\n            <MenuItem value='ccp'>FG1 - CCP</MenuItem>\r\n            <MenuItem value='csp'>FG2 - CSP</MenuItem>\r\n            <MenuItem value='others'>Others</MenuItem>\r\n            </Menu>\r\n\r\n        </div> \r\n      )} else\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    } \r\n\r\n    export default UpdateGroup","import React, {useState} from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\"\r\n\r\n\r\nconst UpdateRole = ({options,person,persons,setPersons}) => {\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n    \r\n  const HandleUpdateStatus = (event) => {  \r\n    setAnchorEl(null);\r\n\r\n    console.log(event.target.getAttribute(\"value\"))\r\n        const newPerson = {\r\n            name: person.name,\r\n            status: person.status,\r\n            reason: person.reason,\r\n            group: person.group,\r\n            excuse: person.excuse,\r\n            role: event.target.getAttribute(\"value\")\r\n        }\r\n    \r\n\r\n  const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (event.target.getAttribute(\"value\")) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))\r\n    }\r\n    }\r\n\r\n\r\n    if (options) {\r\n      return (\r\n        <div >\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Role\r\n      </Button>\r\n      <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClick={HandleUpdateStatus}\r\n          onClose={handleClose}>\r\n            <MenuItem value='hq' >Coy HQ</MenuItem>\r\n            <MenuItem value='sevenspec'>7th Mono Spec</MenuItem>\r\n            <MenuItem value='ic2'>IC2 Opr</MenuItem>\r\n            <MenuItem value='is'>IS Opr</MenuItem>\r\n            </Menu>\r\n\r\n        </div> \r\n      )} else\r\n      return (\r\n        <>\r\n        </>\r\n      )\r\n    } \r\n\r\n    export default UpdateRole","import React from \"react\"\r\nimport phoneservice from \"../../services/phoneservice\"\r\nimport {Button} from \"@material-ui/core\"\r\n\r\n\r\nconst UpdateExcuse = ({options,person,persons,setPersons}) => {\r\n    \r\n  const Handleupdateexcuse = (event,value) => {  \r\n\r\n    console.log(value)\r\n    let response = prompt('Current excuses', person.excuse)\r\n    if (response) {\r\n      const newPerson = {\r\n        name: person.name,\r\n        status: person.status,\r\n        reason: person.reason,\r\n        group: person.group,\r\n        excuse: response.toUpperCase(),\r\n        role: person.role\r\n    }\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n        )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (response) {\r\n      return (\r\n        phoneservice\r\n          .update(nameCheck[0].id, newPerson)\r\n          .then(updatedList=> {setPersons(persons.map(person=>\r\n              person.id !== nameCheck[0].id\r\n                ? person\r\n                : updatedList))\r\n      }))  \r\n    }\r\n\r\n    }\r\n    }\r\n\r\n    if (options) {\r\n      return (\r\n        <div >\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={Handleupdateexcuse}>\r\n        Excuses\r\n      </Button>\r\n        </div> \r\n      )\r\n}\r\n    }\r\n\r\n    export default UpdateExcuse","// 24rem width Modal\r\nimport React,{useState} from \"react\";\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\n\r\nconst ModalSize = ({ isOpen, onClose, person }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      rounded=\"md\"\r\n      maxW=\"24rem\"\r\n    >\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n\r\n      <Text\r\n        p={{ l: \"0.5rem\", t: \"0.25rem\" }}\r\n        m={{ b: \"2rem\" }}\r\n      >\r\n        {JSON.stringify({person}, null, 2)}\r\n      </Text>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Close\r\n        </Button>\r\n        <Button onClick={onClose} bg=\"info700\">\r\n          OK\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nconst DetailModal = ({person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"info700\"\r\n            hoverBg=\"info600\"\r\n            m={{ r: \"0.5rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            Details\r\n          </Button>\r\n          <ModalSize\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DetailModal;","import React, {useState} from 'react'\r\nimport { Div, Button, Modal, Icon, Text } from \"atomize\";\r\nimport phoneservice from '../../services/phoneservice';\r\n\r\nconst AlignCenterModal = ({ isOpen, onClose, onSubmit, person }) => {\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} align=\"center\" rounded=\"md\">\r\n      <Icon\r\n        name=\"Cross\"\r\n        pos=\"absolute\"\r\n        top=\"1rem\"\r\n        right=\"1rem\"\r\n        size=\"16px\"\r\n        onClick={onClose}\r\n        cursor=\"pointer\"\r\n      />\r\n      <Div d=\"flex\" m={{ b: \"4rem\" }} >\r\n        <Icon\r\n          name=\"AlertSolid\"\r\n          color=\"warning700\"\r\n          m={{ t: \"0.35rem\", r: \"0.5rem\" }}\r\n        />\r\n        <Text p={{ l: \"0.5rem\", t: \"0.25rem\" }} textSize=\"subheader\">\r\n          Are you sure you want to permanently delete {person}?\r\n        </Text>\r\n      </Div>\r\n      <Div d=\"flex\" justify=\"flex-end\">\r\n        <Button\r\n          onClick={onClose}\r\n          bg=\"gray200\"\r\n          textColor=\"medium\"\r\n          m={{ r: \"1rem\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} bg=\"info700\">\r\n          Yes, Delete\r\n        </Button>\r\n      </Div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst DeleteModal = ({id, setPersons, persons, person}) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const Handlesubmit = () => {\r\n        setshowModal(!showModal)\r\n        \r\n        phoneservice\r\n        .removePerson(id)\r\n        setPersons(persons.filter(person=>person.id !==id))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n          <Button\r\n            bg=\"info700\"\r\n            hoverBg=\"info600\"\r\n            m={{ b: \"1rem\" }}\r\n            onClick={Handleclick}\r\n          >\r\n            Delete\r\n          </Button>\r\n          <AlignCenterModal\r\n            isOpen={showModal}\r\n            onClose={Handleclick}\r\n            onSubmit={Handlesubmit}\r\n            person={person}\r\n          />\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeleteModal;","import React, {useState} from \"react\";\r\nimport { Div, Dropdown, Anchor} from \"atomize\";\r\nimport phoneservice from \"../../services/phoneservice\";\r\n\r\n\r\n\r\nconst RoleModal = ({options,person,persons,setPersons}) => {\r\n\r\n    const HandleUpdateStatus = (event) => {  \r\n        console.log(event.target.getAttribute(\"value\"))\r\n            const newPerson = {\r\n                name: person.name,\r\n                status: person.status,\r\n                reason: person.reason,\r\n                group: person.group,\r\n                excuse: person.excuse,\r\n                role: event.target.getAttribute(\"value\")\r\n            }\r\n    const nameCheck = persons.filter(person=> \r\n        person.name.toLowerCase().includes(newPerson.name.toLowerCase()))\r\n          \r\n    console.log(nameCheck)\r\n      \r\n    if (event.target.getAttribute(\"value\")) {\r\n            return (\r\n              phoneservice\r\n                .update(nameCheck[0].id, newPerson)\r\n                .then(updatedList=> {setPersons(persons.map(person=>\r\n                    person.id !== nameCheck[0].id\r\n                      ? person\r\n                      : updatedList))\r\n            }))\r\n          }\r\n          }\r\n    \r\n    const menuList = (\r\n      <Div p={{ x: \"4rem\", y: \"0.5rem\" }} onClick ={HandleUpdateStatus}>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='hq' >\r\n            \"Coy HQ\"    \r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='sevenspec' >\r\n            7th Mono Spec\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='ic2'>\r\n            IC2 Opr\r\n        </Anchor>\r\n        <Anchor d=\"block\" p={{ y: \"0.25rem\" }} value='is'>\r\n            IS Opr\r\n        </Anchor>\r\n      </Div>\r\n    );\r\n\r\n    const [showModal, setshowModal] = useState(false)\r\n\r\n    const Handleclick = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n    \r\n    return (\r\n        <Dropdown\r\n          w=\"fit-content\"\r\n          isOpen={showModal}\r\n          onClick={Handleclick}\r\n          menu={menuList}\r\n        >\r\n          ROLE\r\n        </Dropdown>\r\n      );\r\n}\r\n\r\nexport default RoleModal;","import React, {useState} from 'react'\r\nimport UpdateStatus from './updateStatus'\r\nimport UpdateGroup from './updateGroup'\r\nimport UpdateRole from './updateRole'\r\nimport UpdateExcuse from './updateExcuse'\r\nimport DetailModal from './detailmodal'\r\nimport DeleteModal from './deletemodal'\r\nimport RoleModal from './rolemodal'\r\nimport { Div, Button } from 'atomize'\r\n\r\nconst Updatebuttons = ({person, id, setPersons, persons}) => {\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n  \r\n  if (show===false) {\r\n      return (  \r\n        <Div d=\"flex\">\r\n          <Button color=\"warning700\" onClick={HandleShow}>Update</Button>\r\n          <DetailModal person={person}/>\r\n          <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n        </Div>\r\n      )} else {\r\n        return (\r\n          <>\r\n          <Div d=\"flex\">\r\n            <Button onClick={HandleShow}>Hide</Button>\r\n            <DetailModal person={person}/>\r\n            <DeleteModal id={id} setPersons={setPersons} persons={persons} person={person.name}/>\r\n          </Div>\r\n          <Div d=\"flex\">\r\n            <UpdateStatus options={show} \r\n                          person={person}\r\n                          persons={persons}\r\n                          setPersons={setPersons}/>\r\n            <UpdateGroup options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <RoleModal options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <UpdateRole options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n            <UpdateExcuse options={show} person={person} persons={persons} setPersons={setPersons}/>\r\n\r\n          </Div>\r\n          </>\r\n        )}\r\n}\r\n\r\nexport default Updatebuttons\r\n","import React from \"react\";\r\n\r\nconst Emoji = ({symbol}) => (\r\n    <span\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n    >\r\n        {symbol}\r\n    </span>\r\n  );\r\n  \r\n  const Emojidisplay = ({currentStatus}) => {\r\n    if (currentStatus==='present') {\r\n      return <Emoji symbol=\"✅\"/>\r\n    } else if (currentStatus==='attached') {\r\n      return <Emoji symbol=\"🅰\"/>\r\n    } else if (currentStatus==='others') {\r\n      return <Emoji symbol=\"🗒\"/>\r\n    } else if (currentStatus==='mc') {\r\n    return <Emoji symbol=\"😷\"/>\r\n    } else if (currentStatus==='ma') {\r\n      return <Emoji symbol=\"👨🏻‍⚕️\"/>\r\n    } else if (currentStatus==='off') {\r\n    return <Emoji symbol=\"🚫\"/>\r\n    } else if (currentStatus==='leave') {\r\n      return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='leave') {\r\n    return <Emoji symbol=\"🚪\"/>\r\n    } else if (currentStatus==='stayout') {\r\n    return <Emoji symbol=\"🏠\"/>\r\n    } else if (currentStatus==='oncourse') {\r\n      return <Emoji symbol=\"👨🏻‍🎓\"/> \r\n    } else {\r\n    return ''\r\n    }\r\n  }\r\n\r\nexport default Emojidisplay\r\n  ","import React from \"react\";\r\n\r\nconst Reason = ({person}) => {\r\n    if (person.reason  && (person.reason!=='nil')) {\r\n        return (\r\n            <>\r\n            ({person.reason})\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reason","import React, {useState} from 'react'\r\nimport Updatebuttons from './updateButtons'; \r\nimport Emojidisplay from '../reusable/emoji';\r\nimport Reason from '../reason';\r\nimport { Div, Button, Icon } from \"atomize\";\r\n\r\n\r\n\r\nconst Personnellist = ({setPersons, persons}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const HandleShow = () => setShow(!show)\r\n\r\n  if (show===false) {\r\n    return (\r\n      <>\r\n      <Div d=\"flex\">\r\n        <Button\r\n        suffix={\r\n        <Icon\r\n        name=\"LongRight\"\r\n        size=\"16px\"\r\n        color=\"white\"\r\n        m={{ l: \"1rem\" }}\r\n      />}\r\n      shadow=\"3\"\r\n      hoverShadow=\"4\"\r\n      m={{ r: \"1rem\" }}\r\n      onClick={HandleShow}\r\n      >\r\n    Edit\r\n    </Button>\r\n    </Div>\r\n      </>\r\n    )} else {\r\n      return (\r\n        <div>\r\n      <Div d=\"flex\">\r\n        <Button\r\n        suffix={\r\n        <Icon\r\n        name=\"LongRight\"\r\n        size=\"16px\"\r\n        color=\"white\"\r\n        m={{ l: \"1rem\" }}\r\n      />}\r\n      shadow=\"3\"\r\n      hoverShadow=\"4\"\r\n      m={{ r: \"1rem\" }}\r\n      onClick={HandleShow}\r\n      >\r\n    Hide\r\n    </Button>\r\n    </Div>\r\n          <br/>\r\n          <ol>\r\n            {persons.map(person=>\r\n              <li key={person.name}>\r\n                {person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n                <br/>\r\n                <Updatebuttons person={person}\r\n                               id={person.id}\r\n                               setPersons={setPersons}\r\n                               persons={persons}/>\r\n              </li>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      )\r\n  }\r\n\r\n    \r\n  }\r\n\r\n  export default Personnellist","import React from \"react\";\r\nimport { TextField} from '@material-ui/core';\r\n\r\nconst Settings = ({\r\n    newcdo,\r\n    handlecdochange,\r\n    newcds,\r\n    handlecdschange,\r\n    newcos,\r\n    handlecoschange,\r\n    newas,\r\n    handleaschange,\r\n    newauthor,\r\n    handleauthorchange\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"CDO (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcdo}\r\n              onChange={handlecdochange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"CDS (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcds}\r\n              onChange={handlecdschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"COS (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newcos}\r\n              onChange={handlecoschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"A/S (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newas}\r\n              onChange={handleaschange}\r\n              />  \r\n          </div>\r\n\r\n          <div>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Done By: (Rank/Name)\"\r\n              multiline\r\n              maxRows={4}\r\n              value={newauthor}\r\n              onChange={handleauthorchange}\r\n              />  \r\n          </div>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from \"react\";\r\nimport Newdate from '../reusable/newdate'\r\n\r\nlet Today = new Date();\r\nlet hours = Today.getHours()\r\nlet minutes = Today.getMinutes()\r\n\r\nif(hours<10) hours=`0${hours}`\r\nif(minutes<10) minutes=`0${minutes}`\r\nconst CurrentTime = `${hours}${minutes}`\r\n\r\nlet greeting = ''\r\nif (CurrentTime<1200 && CurrentTime>= '0000') {\r\n    greeting = 'morning'\r\n} else if (CurrentTime>1600) {\r\n    greeting = 'evening'\r\n} else {\r\n    greeting = 'afternoon'\r\n}\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <>\r\n        <p>Good {greeting} Commanders, this is the strength for Signal Company as of {CurrentTime} on {Newdate}.</p>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Greeting","import React from 'react'\r\nimport Emojidisplay from '../reusable/emoji'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Absentees = ({persons}) => {\r\n  \r\n  let mc = 0\r\n  persons.map(person=> (person.status==='mc') ? (mc = mc+1) : mc)\r\n  let ma = 0\r\n  persons.map(person=> (person.status==='ma') ? (ma = ma+1) : ma)\r\n  let off = 0\r\n  persons.map(person=> (person.status==='off') ? (off = off+1) : off)\r\n  let oncourse = 0\r\n  persons.map(person=> (person.status==='oncourse') ? (oncourse = oncourse+1) : oncourse)\r\n  let leave = 0\r\n  persons.map(person=> (person.status==='leave') ? (leave = leave+1) : leave)\r\n  let attached = 0\r\n  persons.map(person=> (person.status==='attached') ? (attached = attached+1) : attached)\r\n  let others = 0\r\n  persons.map(person=> (person.status==='others') ? (others = others+1) : others)\r\n  let stayout = 0\r\n  persons.map(person=> (person.status==='stayout') ? (stayout = stayout+1) : stayout)\r\n\r\n  const totalAbsentee = mc + ma + off + leave + attached + others + stayout + oncourse\r\n      return (\r\n      <div>\r\n        <p style={style}>Absentees: {totalAbsentee}</p>\r\n          <p style={style}> - <Emojidisplay currentStatus =\"mc\" /> MC: {mc} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"ma\" /> MA: {ma} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"off\" /> OFF: {off} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"oncourse\" /> ON COURSE: {oncourse} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"leave\" /> LEAVE: {leave} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"attached\" /> ATTACHED OUT: {attached} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"others\" /> OTHERS: {others} </p>\r\n          <p style={style}>- <Emojidisplay currentStatus =\"stayout\" /> STAY OUT: {stayout} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Absentees","import React from 'react'\r\n\r\nconst style = {\r\n  padding: 0,\r\n  margin: 0\r\n}\r\n\r\nconst Roles = ({persons}) => {\r\n\r\n  const HQrolelist = persons.filter(person=> (person.role==='hq'))\r\n  let HQcurrent = 0\r\n  HQrolelist.map(person=> (person.status==='present') ? (HQcurrent = HQcurrent+1) : HQcurrent)\r\n  const HQtotal = HQrolelist.length\r\n\r\n  const SevenSpecrolelist = persons.filter(person=> (person.role==='sevenspec'))\r\n  let Sevenspeccurrent = 0\r\n  SevenSpecrolelist.map(person=> (person.status==='present') ? (Sevenspeccurrent = Sevenspeccurrent+1) : Sevenspeccurrent)\r\n  const SevenSpectotal = SevenSpecrolelist.length\r\n\r\n  const IC2rolelist = persons.filter(person=> (person.role==='ic2'))\r\n  let IC2current = 0\r\n  IC2rolelist.map(person=> (person.status==='present') ? (IC2current = IC2current+1) : IC2current)\r\n  const IC2total = IC2rolelist.length\r\n\r\n\r\n  const ISrolelist = persons.filter(person=> (person.role==='is'))\r\n  let IScurrent = 0\r\n  ISrolelist.map(person=> (person.status==='present') ? (IScurrent = IScurrent+1) : IScurrent)\r\n  const IStotal = ISrolelist.length\r\n\r\n      return (\r\n      <div>\r\n          <p style={style}> -Coy HQ: {HQcurrent}/{HQtotal} </p>\r\n          <p style={style}> -7th Mono Spec: {Sevenspeccurrent}/{SevenSpectotal} </p>\r\n          <p style={style}> -IC2 Opr: {IC2current}/{IC2total} </p>\r\n          <p style={style}> -IS Opr: {IScurrent}/{IStotal} </p>\r\n          <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Roles","import React from \"react\";\r\nimport Absentees from \"./absentees\";\r\nimport Roles from \"./roles\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Summary = ({persons,\r\n                newcdo,\r\n                newcds,\r\n                newcos,\r\n                newas}) => {\r\n    let currentstrength = 0\r\n    persons.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = persons.length\r\n\r\n    return (\r\n        <div>\r\n        <p style={style}>CDO: {newcdo.toUpperCase()}</p>\r\n        <p style={style}>CDS: {newcds.toUpperCase()}</p>\r\n        <p style={style}>COS: {newcos.toUpperCase()}</p>\r\n        <p style={style}>ARMSKOTE: {newas.toUpperCase()}</p>\r\n        <br/>\r\n        <p style={style}>Total Strength: {totalstrength}</p>\r\n        <p style={style}>Present Strength: {currentstrength}</p>\r\n        <br/>\r\n        <Roles persons ={persons} />\r\n        <Absentees persons={persons} />\r\n        </div>\r\n    )\r\n}\r\nexport default Summary","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst HQ = ({persons}) => {\r\n    \r\n    const HQList = persons.filter(person=> (String(person.group)).toLowerCase()==='hq') \r\n    console.log(`List of HQ personnel: ${JSON.stringify(HQList)}`)\r\n    let currentstrength = 0\r\n    HQList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = HQList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>HQ: {currentstrength}/{totalstrength}</p>\r\n            {HQList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default HQ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CCP = ({persons}) => {\r\n    \r\n    const CCPList = persons.filter(person=> (String(person.group)).toLowerCase()==='ccp') \r\n    console.log(`List of CCP personnel: ${JSON.stringify(CCPList)}`)\r\n    let currentstrength = 0\r\n    CCPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CCPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG1 - CCP: {currentstrength}/{totalstrength}</p>\r\n            {CCPList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CCP ","import React from \"react\"\r\nimport Emojidisplay from \"../reusable/emoji\"\r\nimport Reason from \"../reason\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst CSP = ({persons}) => {\r\n    \r\n    const CSPList = persons.filter(person=> (String(person.group)).toLowerCase()==='csp') \r\n    console.log(`List of CSP personnel: ${JSON.stringify(CSPList)}`)\r\n    let currentstrength = 0\r\n    CSPList.map(person=> (person.status==='present') ? (currentstrength = currentstrength+1) : currentstrength)\r\n    const totalstrength = CSPList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>FG2 - CSP: {currentstrength}/{totalstrength}</p>\r\n            {CSPList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name}\r\n                <Emojidisplay currentStatus ={person.status} />\r\n                <Reason person = {person} />\r\n\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default CSP","import React from \"react\"\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Excuse = ({person}) => {\r\n  if (person.excuse) {\r\n    return (\r\n        <>\r\n        ({person.excuse})\r\n        </>\r\n    )\r\n} else {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n}\r\n\r\nconst Excuses = ({persons}) => {\r\n  \r\n    \r\n    const ExcuseList = persons.filter(person=> person.excuse && (person.excuse!=='nil'))\r\n    console.log(`List of personnel with excuses: ${JSON.stringify(ExcuseList)}` )\r\n    const currentstrength = ExcuseList.length\r\n    return (\r\n        <div>\r\n          <p style={style}>STATUSES: {currentstrength}</p>\r\n            {ExcuseList.map((person, index)=> \r\n              <p style={style} key={person.name}>\r\n                {index+1}.  \r\n                {' ' + person.name + ' '}\r\n                <Excuse person={person} />\r\n              </p>\r\n                        \r\n            )}   \r\n        </div>\r\n      )\r\n}\r\n\r\n\r\n  \r\n\r\n  export default Excuses","import React from \"react\";\r\n\r\nconst style = {\r\n    padding: 0,\r\n    margin: 0\r\n  }\r\n\r\nconst Signature = ({newauthor}) => {\r\n    return (\r\n        <div>\r\n        <p style={style}>Done by:</p>\r\n        {newauthor.toUpperCase()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signature","import React from 'react'\r\nimport HQ from './contents/hq' \r\nimport CCP from './contents/CCP';\r\nimport CSP from './contents/CSP'\r\nimport Excuses from './contents/Excuses'\r\nimport Signature from \"./contents/signature\"\r\n\r\nconst ParadeState = ({persons, newauthor}) => {\r\n  return (\r\n    <>\r\n    <HQ persons={persons}/>\r\n    <br/>\r\n    <CCP persons={persons}/>\r\n    <br/>\r\n    <CSP persons={persons}/>\r\n    <br/>\r\n    <Excuses persons={persons}/>\r\n    <br/>\r\n    <Signature newauthor={newauthor}/>\r\n    </>\r\n\r\n  )\r\n  }\r\n\r\n  export default ParadeState","import React, { useEffect, useState } from 'react'\r\nimport Message from './components/message'\r\nimport Form from './components/insertnew/form'\r\nimport Personnellist from './components/personnellist/personnelList'\r\nimport Settings from './components/settings' \r\nimport phoneservice from './services/phoneservice'\r\nimport Greeting from './components/title/greeting'\r\nimport Summary from './components/summary/summary'\r\nimport ParadeState from './components/paradestate'\r\n\r\n//App component\r\nconst Appcontent = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newStatus, setnewStatus ] = useState('')\r\n  const [ newReason, setnewReason ] = useState('')\r\n\r\n  const [ newGroup, setnewGroup ] = useState('')\r\n  const [ newexcuse, setnewExcuse ] = useState('')\r\n  const [ newRole, setnewRole ] = useState('')\r\n  \r\n  \r\n  const [newcdo, setnewcdo] = useState('')\r\n  const [newcds, setnewcds] = useState('')\r\n  const [newcos, setnewcos] = useState('')\r\n  const [newas, setnewas] = useState('')\r\n  const [newauthor, setnewauthor] = useState('')\r\n\r\n\r\n\r\n  const [ newMessage, setNewMessage ] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    phoneservice\r\n      .getAll()\r\n      .then(allPersons=>{\r\n        setPersons(allPersons)\r\n      })\r\n  },[])\r\n\r\n  const handlecdochange = (event) => {\r\n      console.log(`CDO: ${event.target.value}`)\r\n      setnewcdo((event.target.value))\r\n    }\r\n\r\n  const handlecdschange = (event) => {\r\n      console.log(`CDS: ${event.target.value}`)\r\n      setnewcds(event.target.value)\r\n    }\r\n\r\n  const handlecoschange = (event) => {\r\n      console.log(`COS: ${event.target.value}`)\r\n      setnewcos(event.target.value)\r\n    }\r\n\r\n    const handleaschange = (event) => {\r\n      console.log(`Armskote: ${event.target.value}`)\r\n      setnewas(event.target.value)\r\n    }\r\n\r\n    const handleauthorchange = (event) => {\r\n      console.log(`Done by: ${event.target.value}`)\r\n      setnewauthor(event.target.value)\r\n    }\r\n\r\n  //Adds new element to persons array\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newPerson = {\r\n      name: newName.trim().toUpperCase(),\r\n      status: newStatus.toLowerCase(),\r\n      reason: (newReason) ? newReason : 'nil',\r\n      group: newGroup.toUpperCase(),\r\n      excuse: (newexcuse) ? newexcuse.trim : 'nil',\r\n      role: newRole\r\n    }\r\n\r\n    const nameCheck = persons.filter(person=> \r\n      person.name.toLowerCase().includes(newPerson.name.toLowerCase())\r\n      )\r\n    \r\n    console.log(nameCheck)\r\n\r\n    if (!newName.trim() || !newStatus.trim() || !newGroup.trim() || !newRole.trim()) {\r\n      alert(\"All fields (besides medical excuses) must be filled\")\r\n    } else if (nameCheck.length>0) {\r\n      if (window.confirm(`${newName.toUpperCase()} is already added to phonebook. Would you like to update the status?`)) {\r\n        return (\r\n          phoneservice\r\n            .update(nameCheck[0].id, newPerson)\r\n            .then(updatedList=> {setPersons(persons.map(person=>\r\n                person.id !== nameCheck[0].id\r\n                  ? person\r\n                  : updatedList))\r\n          setNewMessage(`${newName.toUpperCase()} has been updated`)\r\n          setTimeout(()=>setNewMessage(null),5000)\r\n        })\r\n            .catch(error=> {\r\n              setNewMessage(`${newName.toUpperCase()} has been already been removed from the server`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n        )}\r\n      } else {\r\n        phoneservice\r\n          .addNew(newPerson)\r\n          .then(updatedList => {\r\n              setPersons(persons.concat(updatedList))\r\n              setNewMessage(`${newName.toUpperCase()} has been added`)\r\n              setTimeout(()=>setNewMessage(null),5000)\r\n            })\r\n          .catch(error=> {\r\n            setNewMessage(`${newName.toUpperCase()} has already been added to the server`)\r\n            setTimeout(()=>setNewMessage(null),5000)\r\n          })\r\n        }\r\n        setnewStatus('')\r\n        setNewName('')\r\n        setnewReason('')\r\n        setnewGroup('')\r\n        setnewExcuse('')\r\n        setnewRole('')\r\n\r\n      }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Parade State Application (For Internal Use Only)</h2>\r\n      <Message message={newMessage}/>\r\n      <Form addName={addName}\r\n            newName={newName}\r\n            setNewName={setNewName}\r\n            newStatus={newStatus}\r\n            setnewStatus={setnewStatus}\r\n            newGroup = {newGroup} \r\n            setnewGroup = {setnewGroup}\r\n            newexcuse ={newexcuse}\r\n            setnewExcuse = {setnewExcuse}\r\n            newRole ={newRole}\r\n            setnewRole = {setnewRole}\r\n            setnewReason={setnewReason}/>\r\n      <Personnellist setPersons={setPersons} persons={persons}/>\r\n      <h2>Settings</h2>\r\n      <Settings newcdo={newcdo}\r\n                handlecdochange={handlecdochange}\r\n                newcds={newcds}\r\n                handlecdschange={handlecdschange}\r\n                newcos={newcos}\r\n                handlecoschange={handlecoschange}\r\n                newas={newas}\r\n                handleaschange={handleaschange}\r\n                newauthor = {newauthor}\r\n                handleauthorchange ={handleauthorchange}/>\r\n      <h2>Parade State</h2>\r\n      <Greeting />\r\n      <Summary persons={persons}\r\n               newcdo={newcdo}\r\n               newcds={newcds}\r\n               newcos={newcos}\r\n               newas={newas}\r\n               newauthor = {newauthor}\r\n               handleauthorchange ={handleauthorchange}\r\n               />\r\n      <ParadeState setPersons={setPersons}\r\n                  persons={persons}\r\n                  newauthor={newauthor} />\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Appcontent ","import React,{useState} from 'react';\r\nimport Loginpage from './Loginpage'\r\nimport Appcontent from './Appcontent'\r\n\r\nconst App = () => {\r\n\r\n    const [access, setnewaccess] = useState(false)\r\n\r\n\r\n    if (access) {\r\n        return <Appcontent />\r\n    } else {\r\n        return <Loginpage access={access} setnewaccess={setnewaccess}/>\r\n    }\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport {\n  ThemeProvider,\n  StyleReset} from \"atomize\";\nconst theme = {\n  colors: {\n    brand100: \"#F9F8FC\",\n    brand200: \"#F3F1FA\",\n    brand300: \"#E9E6F6\",\n    brand400: \"#D2CCEC\",\n    brand500: \"#BCB3E2\",\n    brand600: \"#9C8FD6\",\n    brand700: \"#6F5CC3\",\n    brand800: \"#553EB5\",\n    brand900: \"#382683\",\n  }\n};\n\nconst debug =\n  process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <ThemeProvider theme={theme}>\n    <StyleReset />\n    <App />\n    </ThemeProvider>\n\n  </StyletronProvider>, \n  document.getElementById('root')\n);"],"sourceRoot":""}